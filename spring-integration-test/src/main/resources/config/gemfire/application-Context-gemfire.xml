<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:int="http://www.springframework.org/schema/integration" xmlns:int-jdbc="http://www.springframework.org/schema/integration/jdbc" xmlns:int-stream="http://www.springframework.org/schema/integration/stream"
	xmlns:int-jmx="http://www.springframework.org/schema/integration/jmx" xmlns:int-file="http://www.springframework.org/schema/integration/file" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:task="http://www.springframework.org/schema/task" xmlns:p="http://www.springframework.org/schema/p" xmlns:util="http://www.springframework.org/schema/util" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:int-script="http://www.springframework.org/schema/integration/scripting" xmlns:int-groovy="http://www.springframework.org/schema/integration/groovy" xmlns:int-http="http://www.springframework.org/schema/integration/http"
	xmlns:int-ftp="http://www.springframework.org/schema/integration/ftp" xmlns:int-amqp="http://www.springframework.org/schema/integration/amqp" xmlns:rabbit="http://www.springframework.org/schema/rabbit"
	xmlns:int-event="http://www.springframework.org/schema/integration/event" xmlns:int-feed="http://www.springframework.org/schema/integration/feed" xmlns:gfe="http://www.springframework.org/schema/gemfire"
	xmlns:int-gfe="http://www.springframework.org/schema/integration/gemfire" xmlns:gfe-data="http://www.springframework.org/schema/data/gemfire"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.2.xsd
		http://www.springframework.org/schema/integration/groovy http://www.springframework.org/schema/integration/groovy/spring-integration-groovy-2.2.xsd
		http://www.springframework.org/schema/integration/jdbc http://www.springframework.org/schema/integration/jdbc/spring-integration-jdbc-2.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/integration/scripting http://www.springframework.org/schema/integration/scripting/spring-integration-scripting-2.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/integration/http http://www.springframework.org/schema/integration/http/spring-integration-http-2.2.xsd
		http://www.springframework.org/schema/integration/ftp http://www.springframework.org/schema/integration/ftp/spring-integration-ftp-2.2.xsd
		http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration-2.2.xsd
		http://www.springframework.org/schema/integration/file http://www.springframework.org/schema/integration/file/spring-integration-file-2.2.xsd
		http://www.springframework.org/schema/integration/jmx http://www.springframework.org/schema/integration/jmx/spring-integration-jmx-2.2.xsd
		http://www.springframework.org/schema/integration/stream http://www.springframework.org/schema/integration/stream/spring-integration-stream-2.2.xsd
		http://www.springframework.org/schema/integration/amqp http://www.springframework.org/schema/integration/amqp/spring-integration-amqp-2.2.xsd
		http://www.springframework.org/schema/integration/event http://www.springframework.org/schema/integration/event/spring-integration-event-2.2.xsd
		http://www.springframework.org/schema/rabbit http://www.springframework.org/schema/rabbit/spring-rabbit-1.1.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/integration/feed http://www.springframework.org/schema/integration/feed/spring-integration-feed-2.2.xsd
		http://www.springframework.org/schema/gemfire http://www.springframework.org/schema/gemfire/spring-gemfire.xsd
		http://www.springframework.org/schema/integration/gemfire http://www.springframework.org/schema/integration/gemfire/spring-integration-gemfire-2.2.xsd
		http://www.springframework.org/schema/data/gemfire http://www.springframework.org/schema/data/gemfire/spring-data-gemfire.xsd">

	<!-- In this case I am testing a gemfire-outbound-channel-adapter to write cache entries mapped from the message payload. In this example two entries [CREDIT:credit, foo:bar] or [CASH:cash, 
		foo:bar] will be written (created or updated) in the cache region. We are also testing the endpoind gemfire-inbound-channel-adapter, this endpoint produces messages on a channel triggered 
		by a Gemfire EntryEvent. GemFire generates events whenever an entry is CREATED, UPDATED, DESTROYED, or INVALIDATED in the associated region. The gemfire-inbound-channel-adapter allows 
		you to filter on a subset of these events. For example in this example, you are only producing messages in response to an entry being CREATED. In addition, this endpoint can evaluate 
		a SpEL expression, for example in this case you want your message payload to contain an event property such as the new entry value. This gemfire-inbound-channel-adapter requires a reference 
		to the Gemfire region for which the adapter will be listening for events. If expression is not provided the message payload will be a GemFire EntryEvent. -->

	<gfe:cache-server />

	<gfe:cache />

	<gfe:replicated-region id="region" />

	<int:inbound-channel-adapter id="toTestAGemfireOutboundChannelAdapterInboundChannelAdapter"
		expression="T(java.lang.Math).random() > 0.5 ? T(org.springframework.integration.support.MessageBuilder).withPayload(new spring.integration.test.var.PaymentType('CASH')).setHeader('anotherPaymentType', 'DEBIT').build(): 
		T(org.springframework.integration.support.MessageBuilder).withPayload(new spring.integration.test.var.PaymentType('CREDIT')).setHeader('anotherPaymentType', 'PERSONAL CHECK').build()"
		channel="gemfireOutboundChannelAdapterInputChannel" auto-startup="false">
		<int:poller fixed-rate="1000" />
	</int:inbound-channel-adapter>

	<int:channel id="gemfireOutboundChannelAdapterInputChannel" />

	<int-gfe:outbound-channel-adapter id="gemfireOutboundChannelAdapter" region="region" channel="gemfireOutboundChannelAdapterInputChannel">
		<int-gfe:cache-entries>
			<entry key="payload.paymentType.toUpperCase()" value="payload.paymentType.toLowerCase()" />
			<entry key="'foo'" value="'bar'" />
		</int-gfe:cache-entries>
	</int-gfe:outbound-channel-adapter>

	<int:channel id="gemfireInboundChannelAdapterInputChannel" />

	<int-gfe:inbound-channel-adapter id="gemfireInboundChannelAdapter" region="region" channel="gemfireInboundChannelAdapterInputChannel" cache-events="CREATED"
		expression="newValue" />

	<int:outbound-channel-adapter id="toTestAGemfireInboundChannelAdapterOutboundChannelAdapter" channel="gemfireInboundChannelAdapterInputChannel" ref="channelAdapterReceiver"
		method="receiveMessage" auto-startup="false" />

</beans>