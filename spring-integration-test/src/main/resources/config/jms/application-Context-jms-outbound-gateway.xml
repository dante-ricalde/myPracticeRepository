<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:int="http://www.springframework.org/schema/integration" xmlns:int-jdbc="http://www.springframework.org/schema/integration/jdbc" xmlns:int-stream="http://www.springframework.org/schema/integration/stream"
	xmlns:int-jmx="http://www.springframework.org/schema/integration/jmx" xmlns:int-file="http://www.springframework.org/schema/integration/file" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:task="http://www.springframework.org/schema/task" xmlns:p="http://www.springframework.org/schema/p" xmlns:util="http://www.springframework.org/schema/util" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:int-script="http://www.springframework.org/schema/integration/scripting" xmlns:int-groovy="http://www.springframework.org/schema/integration/groovy" xmlns:int-http="http://www.springframework.org/schema/integration/http"
	xmlns:int-ftp="http://www.springframework.org/schema/integration/ftp" xmlns:int-amqp="http://www.springframework.org/schema/integration/amqp" xmlns:rabbit="http://www.springframework.org/schema/rabbit"
	xmlns:int-event="http://www.springframework.org/schema/integration/event" xmlns:int-feed="http://www.springframework.org/schema/integration/feed" xmlns:gfe="http://www.springframework.org/schema/gemfire"
	xmlns:int-gfe="http://www.springframework.org/schema/integration/gemfire" xmlns:gfe-data="http://www.springframework.org/schema/data/gemfire" xmlns:int-ip="http://www.springframework.org/schema/integration/ip"
	xmlns:int-jpa="http://www.springframework.org/schema/integration/jpa" xmlns:int-jms="http://www.springframework.org/schema/integration/jms" xmlns:jms="http://www.springframework.org/schema/jms"
	xsi:schemaLocation="http://www.springframework.org/schema/integration/amqp http://www.springframework.org/schema/integration/amqp/spring-integration-amqp-2.2.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.2.xsd
		http://www.springframework.org/schema/integration/jdbc http://www.springframework.org/schema/integration/jdbc/spring-integration-jdbc-2.2.xsd
		http://www.springframework.org/schema/data/gemfire http://www.springframework.org/schema/data/gemfire/spring-data-gemfire.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/integration/ftp http://www.springframework.org/schema/integration/ftp/spring-integration-ftp-2.2.xsd
		http://www.springframework.org/schema/integration/ip http://www.springframework.org/schema/integration/ip/spring-integration-ip-2.2.xsd
		http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration-4.0.xsd
		http://www.springframework.org/schema/integration/jms http://www.springframework.org/schema/integration/jms/spring-integration-jms-4.0.xsd
		http://www.springframework.org/schema/integration/jmx http://www.springframework.org/schema/integration/jmx/spring-integration-jmx-2.2.xsd
		http://www.springframework.org/schema/integration/stream http://www.springframework.org/schema/integration/stream/spring-integration-stream-2.2.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
		http://www.springframework.org/schema/gemfire http://www.springframework.org/schema/gemfire/spring-gemfire.xsd
		http://www.springframework.org/schema/jms http://www.springframework.org/schema/jms/spring-jms-4.0.xsd
		http://www.springframework.org/schema/integration/groovy http://www.springframework.org/schema/integration/groovy/spring-integration-groovy-2.2.xsd
		http://www.springframework.org/schema/integration/event http://www.springframework.org/schema/integration/event/spring-integration-event-2.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/integration/scripting http://www.springframework.org/schema/integration/scripting/spring-integration-scripting-2.1.xsd
		http://www.springframework.org/schema/integration/http http://www.springframework.org/schema/integration/http/spring-integration-http-2.2.xsd
		http://www.springframework.org/schema/integration/gemfire http://www.springframework.org/schema/integration/gemfire/spring-integration-gemfire-2.2.xsd
		http://www.springframework.org/schema/integration/feed http://www.springframework.org/schema/integration/feed/spring-integration-feed-2.2.xsd
		http://www.springframework.org/schema/integration/file http://www.springframework.org/schema/integration/file/spring-integration-file-2.2.xsd
		http://www.springframework.org/schema/rabbit http://www.springframework.org/schema/rabbit/spring-rabbit-1.1.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/integration/jpa http://www.springframework.org/schema/integration/jpa/spring-integration-jpa-3.0.xsd">

	<!-- In this case I am testing a jms-outbound-gateway that creates JMS Messages and sends them to the request destination named 'mmm', then it handles the JMS reply Message by using 
		a selector to receive from the reply-destination 'mmmReply'. I am using the reply-listener child element of this gateway for handling the replies and with this instead of creating a 
		consumer for each reply, a MessageListener container is used to receive the replies and hand them over to the requesting thread (The thread that sends the message and that it's waiting for 
		the reply (receive-timeout = 5 seconds by default)). I have specified the property time-to-live=3 and with that I have gotten message enqueued in the queue ActiveMQ.DLQ with the property dlqDeliveryFailureCause 
		= java.lang.Throwable: Message Expired. Expiration:1403649341304. To generate the replies a jms-inbound-gateway is used.
		
		Regarding threads I have:
		
		<int:inbound-channel-adapter -> simpleJmsOutboundGatewayRequestChannel -> <int-jms:outbound-gateway -> queue (mmm) -> 
			<int-jms:outbound-gateway (Wait for the reponse) -> simpleJmsOutboundGatewayReplyChannel -> <int:outbound-channel-adapter
		
		generating replies:
			The normal case:
		
		<int-jms:inbound-gateway -> simpleJmsInboundGatewayRequestChannel -> <int:service-activator -> <int-jms:inbound-gateway -> reply queue (mmmReply)
			
			The error case:
		
		<int-jms:inbound-gateway -> simpleJmsInboundGatewayRequestChannel -> <int:service-activator -> <int-jms:inbound-gateway -> simpleJmsInboundGatewayErrorChannel ->
			<int:transformer -> <int-jms:inbound-gateway -> reply queue (mmmReply)
		
		I have noticed that when a message is expired the jms-outbound-gateway throws the exception MessageTimeoutException and that is because the underlying service
		does not return a value after the receive-timeout (because the message has been expired and sent to the queue ActiveMQ.DLQ and it wasn't consumed by the jms-inbound-gateway 
		to generate a reply for that message) and because the property requires-reply is 'true' by default.
		
		I am using the MappingJackson2MessageConverter to convert to format JSON the messages, I need to specify the header 'className' in the messages with the type id 
		of the message so that when the JMS message is received the converter knows what type to use to generate the payload, the type ids and their corresponding types
		are in the property 'typeIdMappings' of the converter.		
		
		A snippet of the logs are:
		
		 DEBUG [org.springframework.integration.endpoint.SourcePollingChannelAdapter]  - Poll resulted in Message: [Payload Item content=Item [id=d9b58c02-9d4c-465d-9937-f09e15d28a48, code=Dantito Ricalde Rivera, description=Dantito Ricalde Rivera, status=1, created_date=null, message=null]][Headers={className=item, id=3b895411-25eb-e8fe-499a-c5a8e73352be, timestamp=1403649141283}]
		 DEBUG [org.springframework.integration.channel.DirectChannel]  - preSend on channel 'simpleJmsOutboundGatewayRequestChannel', message: [Payload Item content=Item [id=d9b58c02-9d4c-465d-9937-f09e15d28a48, code=Dantito Ricalde Rivera, description=Dantito Ricalde Rivera, status=1, created_date=null, message=null]][Headers={history=simpleJmsOutboundGatewayInboundChannelAdapter,simpleJmsOutboundGatewayRequestChannel, className=item, id=e816f2d8-db21-63fa-3884-0c1056c115eb, timestamp=1403649141283}]
		 DEBUG [org.springframework.integration.jms.JmsOutboundGateway]  - org.springframework.integration.jms.JmsOutboundGateway#0 received message: [Payload Item content=Item [id=d9b58c02-9d4c-465d-9937-f09e15d28a48, code=Dantito Ricalde Rivera, description=Dantito Ricalde Rivera, status=1, created_date=null, message=null]][Headers={history=simpleJmsOutboundGatewayInboundChannelAdapter,simpleJmsOutboundGatewayRequestChannel, className=item, id=e816f2d8-db21-63fa-3884-0c1056c115eb, timestamp=1403649141283}]
		 DEBUG [org.apache.activemq.transport.WireFormatNegotiator]  - Sending: WireFormatInfo { version=10, properties={MaxFrameSize=9223372036854775807, CacheSize=1024, CacheEnabled=true, Host=localhost, SizePrefixDisabled=false, MaxInactivityDurationInitalDelay=10000, TcpNoDelayEnabled=true, MaxInactivityDuration=30000, TightEncodingEnabled=true, StackTraceEnabled=true}, magic=[A,c,t,i,v,e,M,Q]}
		 DEBUG [org.apache.activemq.transport.InactivityMonitor]  - Using min of local: WireFormatInfo { version=10, properties={MaxFrameSize=9223372036854775807, CacheSize=1024, CacheEnabled=true, Host=localhost, SizePrefixDisabled=false, MaxInactivityDurationInitalDelay=10000, TcpNoDelayEnabled=true, MaxInactivityDuration=30000, TightEncodingEnabled=true, StackTraceEnabled=true}, magic=[A,c,t,i,v,e,M,Q]} and remote: WireFormatInfo { version=10, properties={CacheSize=1024, MaxFrameSize=104857600, CacheEnabled=true, SizePrefixDisabled=false, TcpNoDelayEnabled=true, MaxInactivityDurationInitalDelay=10000, MaxInactivityDuration=30000, TightEncodingEnabled=true, StackTraceEnabled=true}, magic=[A,c,t,i,v,e,M,Q]}
		 DEBUG [org.apache.activemq.transport.WireFormatNegotiator]  - Received WireFormat: WireFormatInfo { version=10, properties={CacheSize=1024, MaxFrameSize=104857600, CacheEnabled=true, SizePrefixDisabled=false, TcpNoDelayEnabled=true, MaxInactivityDurationInitalDelay=10000, MaxInactivityDuration=30000, TightEncodingEnabled=true, StackTraceEnabled=true}, magic=[A,c,t,i,v,e,M,Q]}
		 DEBUG [org.apache.activemq.transport.WireFormatNegotiator]  - tcp://localhost/127.0.0.1:61616@56377 before negotiation: OpenWireFormat{version=10, cacheEnabled=false, stackTraceEnabled=false, tightEncodingEnabled=false, sizePrefixDisabled=false, maxFrameSize=9223372036854775807}
		 DEBUG [org.apache.activemq.transport.WireFormatNegotiator]  - tcp://localhost/127.0.0.1:61616@56377 after negotiation: OpenWireFormat{version=10, cacheEnabled=true, stackTraceEnabled=true, tightEncodingEnabled=true, sizePrefixDisabled=false, maxFrameSize=104857600}
		 DEBUG [org.springframework.jms.listener.DefaultMessageListenerContainer]  - Received message of type [class org.apache.activemq.command.ActiveMQBytesMessage] from consumer [ActiveMQMessageConsumer { value=ID:DanteRicalde-PC-55913-1403648846388-1:2:1:1, started=true }] of session [ActiveMQSession {id=ID:DanteRicalde-PC-55913-1403648846388-1:2:1,started=true}]
		 DEBUG [org.springframework.integration.jms.ChannelPublishingJmsMessageListener]  - converted JMS Message [ActiveMQBytesMessage {commandId = 5, responseRequired = true, messageId = ID:DanteRicalde-PC-55913-1403648846388-1:61:1:1:1, originalDestination = null, originalTransactionId = null, producerId = ID:DanteRicalde-PC-55913-1403648846388-1:61:1:1, destination = queue://mmm, transactionId = null, expiration = 1403649141298, timestamp = 1403649141295, arrival = 0, brokerInTime = 1403649141295, brokerOutTime = 1403649141296, correlationId = null, replyTo = queue://mmmReply, persistent = true, type = null, priority = 4, groupID = null, groupSequence = 0, targetConsumerId = null, compressed = false, userID = null, content = org.apache.activemq.util.ByteSequence@50dbe4f3, marshalledProperties = org.apache.activemq.util.ByteSequence@149436fe, dataStructure = null, redeliveryCounter = 0, size = 0, properties = {timestamp=1403649141284, className=item}, readOnlyProperties = true, readOnlyBody = true, droppable = false, jmsXGroupFirstForConsumer = false} ActiveMQBytesMessage{ bytesOut = null, dataOut = null, dataIn = java.io.DataInputStream@ea66840 }] to integration Message payload [Item [id=d9b58c02-9d4c-465d-9937-f09e15d28a48, code=Dantito Ricalde Rivera, description=Dantito Ricalde Rivera, status=1, created_date=null, message=null]]
		 DEBUG [org.springframework.integration.channel.DirectChannel]  - preSend on channel 'simpleJmsInboundGatewayRequestChannel', message: [Payload Item content=Item [id=d9b58c02-9d4c-465d-9937-f09e15d28a48, code=Dantito Ricalde Rivera, description=Dantito Ricalde Rivera, status=1, created_date=null, message=null]][Headers={history=simpleJmsInboundGateway,simpleJmsInboundGatewayRequestChannel, errorChannel=org.springframework.messaging.core.GenericMessagingTemplate$TemporaryReplyChannel@4f064943, jms_timestamp=1403649141295, jms_redelivered=false, replyChannel=org.springframework.messaging.core.GenericMessagingTemplate$TemporaryReplyChannel@4f064943, priority=4, className=item, jms_replyTo=queue://mmmReply, jms_messageId=ID:DanteRicalde-PC-55913-1403648846388-1:61:1:1:1, id=0ee4de4d-8440-0f6e-7b26-a171cc43f19e, timestamp=1403649141298}]
		 DEBUG [org.springframework.integration.handler.ServiceActivatingHandler]  - ServiceActivator for [org.springframework.integration.handler.ExpressionEvaluatingMessageProcessor@4c222d19] received message: [Payload Item content=Item [id=d9b58c02-9d4c-465d-9937-f09e15d28a48, code=Dantito Ricalde Rivera, description=Dantito Ricalde Rivera, status=1, created_date=null, message=null]][Headers={history=simpleJmsInboundGateway,simpleJmsInboundGatewayRequestChannel, errorChannel=org.springframework.messaging.core.GenericMessagingTemplate$TemporaryReplyChannel@4f064943, jms_timestamp=1403649141295, jms_redelivered=false, replyChannel=org.springframework.messaging.core.GenericMessagingTemplate$TemporaryReplyChannel@4f064943, priority=4, className=item, jms_replyTo=queue://mmmReply, jms_messageId=ID:DanteRicalde-PC-55913-1403648846388-1:61:1:1:1, id=0ee4de4d-8440-0f6e-7b26-a171cc43f19e, timestamp=1403649141298}]
		 DEBUG [org.springframework.integration.handler.ExpressionEvaluatingMessageProcessor]  - SpEL Expression evaluation failed with Exception.java.lang.NumberFormatException: For input string: "Dantito"
		 WARN  [org.springframework.integration.jms.ChannelPublishingJmsMessageListener$GatewayDelegate]  - failure occurred in gateway sendAndReceive
		 org.springframework.messaging.MessageHandlingException: Expression evaluation failed: T(java.lang.Math).random() > 0.5 ? T(org.springframework.messaging.support.MessageBuilder).withPayload(T(java.lang.String).valueOf('Received message for Service Activator. Message: ' + #this.payload)).copyHeaders(#this.headers).setHeader('className', 'string').build() : T(java.lang.Integer).valueOf('Dantito')
			at org.springframework.integration.util.AbstractExpressionEvaluator.evaluateExpression(AbstractExpressionEvaluator.java:133)
			at org.springframework.integration.handler.ExpressionEvaluatingMessageProcessor.processMessage(ExpressionEvaluatingMessageProcessor.java:76)
			at org.springframework.integration.handler.ServiceActivatingHandler.handleRequestMessage(ServiceActivatingHandler.java:71)
			at org.springframework.integration.handler.AbstractReplyProducingMessageHandler.handleMessageInternal(AbstractReplyProducingMessageHandler.java:170)
			at org.springframework.integration.handler.AbstractMessageHandler.handleMessage(AbstractMessageHandler.java:78)
			at org.springframework.integration.dispatcher.AbstractDispatcher.tryOptimizedDispatch(AbstractDispatcher.java:116)
			at org.springframework.integration.dispatcher.UnicastingDispatcher.doDispatch(UnicastingDispatcher.java:101)
			at org.springframework.integration.dispatcher.UnicastingDispatcher.dispatch(UnicastingDispatcher.java:97)
			at org.springframework.integration.channel.AbstractSubscribableChannel.doSend(AbstractSubscribableChannel.java:77)
			at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:255)
			at org.springframework.messaging.core.GenericMessagingTemplate.doSend(GenericMessagingTemplate.java:109)
			at org.springframework.messaging.core.GenericMessagingTemplate.doSendAndReceive(GenericMessagingTemplate.java:144)
			at org.springframework.messaging.core.GenericMessagingTemplate.doSendAndReceive(GenericMessagingTemplate.java:44)
			at org.springframework.messaging.core.AbstractMessagingTemplate.sendAndReceive(AbstractMessagingTemplate.java:75)
			at org.springframework.integration.gateway.MessagingGatewaySupport.doSendAndReceive(MessagingGatewaySupport.java:250)
			at org.springframework.integration.gateway.MessagingGatewaySupport.sendAndReceiveMessage(MessagingGatewaySupport.java:224)
			at org.springframework.integration.jms.ChannelPublishingJmsMessageListener$GatewayDelegate.sendAndReceiveMessage(ChannelPublishingJmsMessageListener.java:485)
			at org.springframework.integration.jms.ChannelPublishingJmsMessageListener.onMessage(ChannelPublishingJmsMessageListener.java:330)
			at org.springframework.jms.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:537)
			at org.springframework.jms.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:497)
			at org.springframework.jms.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:468)
			at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.doReceiveAndExecute(AbstractPollingMessageListenerContainer.java:325)
			at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.receiveAndExecute(AbstractPollingMessageListenerContainer.java:263)
			at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.invokeListener(DefaultMessageListenerContainer.java:1102)
			at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.executeOngoingLoop(DefaultMessageListenerContainer.java:1094)
			at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:991)
			at java.lang.Thread.run(Thread.java:722)
		Caused by: java.lang.NumberFormatException: For input string: "Dantito"
			at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
			at java.lang.Integer.parseInt(Integer.java:492)
			at java.lang.Integer.valueOf(Integer.java:582)
			at sun.reflect.GeneratedMethodAccessor61.invoke(Unknown Source)
			at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
			at java.lang.reflect.Method.invoke(Method.java:601)
			at org.springframework.expression.spel.support.ReflectiveMethodExecutor.execute(ReflectiveMethodExecutor.java:63)
			at org.springframework.expression.spel.ast.MethodReference.getValueInternal(MethodReference.java:95)
			at org.springframework.expression.spel.ast.MethodReference.access$000(MethodReference.java:44)
			at org.springframework.expression.spel.ast.MethodReference$MethodValueRef.getValue(MethodReference.java:258)
			at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:84)
			at org.springframework.expression.spel.ast.Ternary.getValueInternal(Ternary.java:57)
			at org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:114)
			at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:111)
			at org.springframework.integration.util.AbstractExpressionEvaluator.evaluateExpression(AbstractExpressionEvaluator.java:159)
			at org.springframework.integration.util.AbstractExpressionEvaluator.evaluateExpression(AbstractExpressionEvaluator.java:119)
			... 26 more
		DEBUG [org.springframework.integration.channel.DirectChannel]  - preSend on channel 'simpleJmsInboundGatewayErrorChannel', message: [Payload MessageHandlingException content=org.springframework.messaging.MessageHandlingException: Expression evaluation failed: T(java.lang.Math).random() > 0.5 ? T(org.springframework.messaging.support.MessageBuilder).withPayload(T(java.lang.String).valueOf('Received message for Service Activator. Message: ' + #this.payload)).copyHeaders(#this.headers).setHeader('className', 'string').build() : T(java.lang.Integer).valueOf('Dantito')][Headers={errorChannel=org.springframework.messaging.core.GenericMessagingTemplate$TemporaryReplyChannel@70283a70, history=simpleJmsInboundGatewayErrorChannel, replyChannel=org.springframework.messaging.core.GenericMessagingTemplate$TemporaryReplyChannel@70283a70, id=966a4d31-b8ff-1392-a9b7-cb0521a8f931, timestamp=1403649141300}]
		 DEBUG [org.springframework.integration.transformer.MessageTransformingHandler]  - org.springframework.integration.transformer.MessageTransformingHandler@6f7e06d0 received message: [Payload MessageHandlingException content=org.springframework.messaging.MessageHandlingException: Expression evaluation failed: T(java.lang.Math).random() > 0.5 ? T(org.springframework.messaging.support.MessageBuilder).withPayload(T(java.lang.String).valueOf('Received message for Service Activator. Message: ' + #this.payload)).copyHeaders(#this.headers).setHeader('className', 'string').build() : T(java.lang.Integer).valueOf('Dantito')][Headers={errorChannel=org.springframework.messaging.core.GenericMessagingTemplate$TemporaryReplyChannel@70283a70, history=simpleJmsInboundGatewayErrorChannel, replyChannel=org.springframework.messaging.core.GenericMessagingTemplate$TemporaryReplyChannel@70283a70, id=966a4d31-b8ff-1392-a9b7-cb0521a8f931, timestamp=1403649141300}]
		 DEBUG [org.springframework.integration.transformer.MessageTransformingHandler]  - handler 'org.springframework.integration.transformer.MessageTransformingHandler@6f7e06d0' sending reply Message: [Payload Error content=Error [code=org.springframework.messaging.MessageHandlingException, descrption=Expression evaluation failed: T(java.lang.Math).random() > 0.5 ? T(org.springframework.messaging.support.MessageBuilder).withPayload(T(java.lang.String).valueOf('Received message for Service Activator. Message: ' + #this.payload)).copyHeaders(#this.headers).setHeader('className', 'string').build() : T(java.lang.Integer).valueOf('Dantito')]][Headers={history=simpleJmsInboundGatewayErrorChannel,simpleJmsInboundGatewayErrorChannelTransformer, errorChannel=org.springframework.messaging.core.GenericMessagingTemplate$TemporaryReplyChannel@70283a70, replyChannel=org.springframework.messaging.core.GenericMessagingTemplate$TemporaryReplyChannel@70283a70, className=error, id=d4b92d23-b564-20f2-2b7b-7c037e83d113, timestamp=1403649141301}]
		 DEBUG [org.springframework.integration.channel.DirectChannel]  - postSend (sent=true) on channel 'simpleJmsInboundGatewayErrorChannel', message: [Payload MessageHandlingException content=org.springframework.messaging.MessageHandlingException: Expression evaluation failed: T(java.lang.Math).random() > 0.5 ? T(org.springframework.messaging.support.MessageBuilder).withPayload(T(java.lang.String).valueOf('Received message for Service Activator. Message: ' + #this.payload)).copyHeaders(#this.headers).setHeader('className', 'string').build() : T(java.lang.Integer).valueOf('Dantito')][Headers={errorChannel=org.springframework.messaging.core.GenericMessagingTemplate$TemporaryReplyChannel@70283a70, history=simpleJmsInboundGatewayErrorChannel, replyChannel=org.springframework.messaging.core.GenericMessagingTemplate$TemporaryReplyChannel@70283a70, id=966a4d31-b8ff-1392-a9b7-cb0521a8f931, timestamp=1403649141300}]
		 DEBUG [org.apache.activemq.thread.TaskRunnerFactory]  - Initialized TaskRunnerFactory[ActiveMQ Session Task] using ExecutorService: java.util.concurrent.ThreadPoolExecutor@342be5bc[Running, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0]
		 DEBUG [org.apache.activemq.ActiveMQMessageConsumer]  - remove: ID:DanteRicalde-PC-55913-1403648846388-1:61:1:1, lastDeliveredSequenceId:4666
		 DEBUG [org.apache.activemq.util.ThreadPoolUtils]  - Shutdown of ExecutorService: java.util.concurrent.ThreadPoolExecutor@342be5bc[Terminated, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 1] is shutdown: true and terminated: true took: 0.001 seconds.
		 DEBUG [org.apache.activemq.util.ThreadPoolUtils]  - Shutdown of ExecutorService: java.util.concurrent.ThreadPoolExecutor@45987154[Terminated, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0] is shutdown: true and terminated: true took: 0.000 seconds.
		 DEBUG [org.apache.activemq.transport.tcp.TcpTransport]  - Stopping transport tcp://localhost/127.0.0.1:61616@56377
		 DEBUG [org.apache.activemq.thread.TaskRunnerFactory]  - Initialized TaskRunnerFactory[ActiveMQ Task] using ExecutorService: java.util.concurrent.ThreadPoolExecutor@1b38657e[Running, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0]
		 DEBUG [org.apache.activemq.transport.tcp.TcpTransport]  - Closed socket Socket[addr=localhost/127.0.0.1,port=61616,localport=56377]
		 DEBUG [org.apache.activemq.util.ThreadPoolUtils]  - Forcing shutdown of ExecutorService: java.util.concurrent.ThreadPoolExecutor@1b38657e[Running, pool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1]
		 DEBUG [org.springframework.integration.jms.JmsOutboundGateway]  - converted JMS Message [ActiveMQBytesMessage {commandId = 220, responseRequired = true, messageId = ID:DanteRicalde-PC-55913-1403648846388-1:2:1:53:1, originalDestination = null, originalTransactionId = null, producerId = ID:DanteRicalde-PC-55913-1403648846388-1:2:1:53, destination = queue://mmmReply, transactionId = null, expiration = 0, timestamp = 1403649141326, arrival = 0, brokerInTime = 1403649141326, brokerOutTime = 1403649141326, correlationId = ID:DanteRicalde-PC-55913-1403648846388-1:61:1:1:1, replyTo = null, persistent = true, type = null, priority = 4, groupID = null, groupSequence = 0, targetConsumerId = null, compressed = false, userID = null, content = org.apache.activemq.util.ByteSequence@796661ce, marshalledProperties = org.apache.activemq.util.ByteSequence@309f59a6, dataStructure = null, redeliveryCounter = 0, size = 0, properties = {timestamp=1403649141301, className=error}, readOnlyProperties = true, readOnlyBody = true, droppable = false, jmsXGroupFirstForConsumer = false} ActiveMQBytesMessage{ bytesOut = null, dataOut = null, dataIn = java.io.DataInputStream@2db6ba3a }] to integration Message payload [Error [code=org.springframework.messaging.MessageHandlingException, descrption=Expression evaluation failed: T(java.lang.Math).random() > 0.5 ? T(org.springframework.messaging.support.MessageBuilder).withPayload(T(java.lang.String).valueOf('Received message for Service Activator. Message: ' + #this.payload)).copyHeaders(#this.headers).setHeader('className', 'string').build() : T(java.lang.Integer).valueOf('Dantito')]]
		 DEBUG [org.springframework.integration.jms.JmsOutboundGateway]  - handler 'org.springframework.integration.jms.JmsOutboundGateway#0' sending reply Message: [Payload Error content=Error [code=org.springframework.messaging.MessageHandlingException, descrption=Expression evaluation failed: T(java.lang.Math).random() > 0.5 ? T(org.springframework.messaging.support.MessageBuilder).withPayload(T(java.lang.String).valueOf('Received message for Service Activator. Message: ' + #this.payload)).copyHeaders(#this.headers).setHeader('className', 'string').build() : T(java.lang.Integer).valueOf('Dantito')]][Headers={history=simpleJmsOutboundGatewayInboundChannelAdapter,simpleJmsOutboundGatewayRequestChannel,simpleJmsOutboundGateway, jms_timestamp=1403649141326, jms_redelivered=false, priority=4, jms_correlationId=ID:DanteRicalde-PC-55913-1403648846388-1:61:1:1:1, className=error, jms_messageId=ID:DanteRicalde-PC-55913-1403648846388-1:2:1:53:1, id=8faa3b66-6ec5-6e9e-6844-4ca3a1f35982, timestamp=1403649141383}]
		 DEBUG [org.springframework.integration.channel.DirectChannel]  - preSend on channel 'simpleJmsOutboundGatewayReplyChannel', message: [Payload Error content=Error [code=org.springframework.messaging.MessageHandlingException, descrption=Expression evaluation failed: T(java.lang.Math).random() > 0.5 ? T(org.springframework.messaging.support.MessageBuilder).withPayload(T(java.lang.String).valueOf('Received message for Service Activator. Message: ' + #this.payload)).copyHeaders(#this.headers).setHeader('className', 'string').build() : T(java.lang.Integer).valueOf('Dantito')]][Headers={history=simpleJmsOutboundGatewayInboundChannelAdapter,simpleJmsOutboundGatewayRequestChannel,simpleJmsOutboundGateway,simpleJmsOutboundGatewayReplyChannel, jms_timestamp=1403649141326, jms_redelivered=false, priority=4, jms_correlationId=ID:DanteRicalde-PC-55913-1403648846388-1:61:1:1:1, className=error, jms_messageId=ID:DanteRicalde-PC-55913-1403648846388-1:2:1:53:1, id=6c4ae7b7-4ca9-15f6-b903-96647bc358d2, timestamp=1403649141384}]
		 DEBUG [org.springframework.integration.handler.MethodInvokingMessageHandler]  - org.springframework.integration.handler.MethodInvokingMessageHandler#28 received message: [Payload Error content=Error [code=org.springframework.messaging.MessageHandlingException, descrption=Expression evaluation failed: T(java.lang.Math).random() > 0.5 ? T(org.springframework.messaging.support.MessageBuilder).withPayload(T(java.lang.String).valueOf('Received message for Service Activator. Message: ' + #this.payload)).copyHeaders(#this.headers).setHeader('className', 'string').build() : T(java.lang.Integer).valueOf('Dantito')]][Headers={history=simpleJmsOutboundGatewayInboundChannelAdapter,simpleJmsOutboundGatewayRequestChannel,simpleJmsOutboundGateway,simpleJmsOutboundGatewayReplyChannel, jms_timestamp=1403649141326, jms_redelivered=false, priority=4, jms_correlationId=ID:DanteRicalde-PC-55913-1403648846388-1:61:1:1:1, className=error, jms_messageId=ID:DanteRicalde-PC-55913-1403648846388-1:2:1:53:1, id=6c4ae7b7-4ca9-15f6-b903-96647bc358d2, timestamp=1403649141384}]
		 INFO  [spring.integration.test.adapter.receiver.ChannelAdapterReceiver]  - Channel Adapter Receiver: Message Received: [Payload Error content=Error [code=org.springframework.messaging.MessageHandlingException, descrption=Expression evaluation failed: T(java.lang.Math).random() > 0.5 ? T(org.springframework.messaging.support.MessageBuilder).withPayload(T(java.lang.String).valueOf('Received message for Service Activator. Message: ' + #this.payload)).copyHeaders(#this.headers).setHeader('className', 'string').build() : T(java.lang.Integer).valueOf('Dantito')]][Headers={history=simpleJmsOutboundGatewayInboundChannelAdapter,simpleJmsOutboundGatewayRequestChannel,simpleJmsOutboundGateway,simpleJmsOutboundGatewayReplyChannel,simpleJmsOutboundGatewayOutboundChannelAdapter, jms_timestamp=1403649141326, jms_redelivered=false, priority=4, jms_correlationId=ID:DanteRicalde-PC-55913-1403648846388-1:61:1:1:1, className=error, jms_messageId=ID:DanteRicalde-PC-55913-1403648846388-1:2:1:53:1, id=a17e384b-f043-332b-30fc-45fbdae65535, timestamp=1403649141385}]*********END OF THE MESSAGE *************************
		 DEBUG [org.springframework.integration.channel.DirectChannel]  - postSend (sent=true) on channel 'simpleJmsOutboundGatewayReplyChannel', message: [Payload Error content=Error [code=org.springframework.messaging.MessageHandlingException, descrption=Expression evaluation failed: T(java.lang.Math).random() > 0.5 ? T(org.springframework.messaging.support.MessageBuilder).withPayload(T(java.lang.String).valueOf('Received message for Service Activator. Message: ' + #this.payload)).copyHeaders(#this.headers).setHeader('className', 'string').build() : T(java.lang.Integer).valueOf('Dantito')]][Headers={history=simpleJmsOutboundGatewayInboundChannelAdapter,simpleJmsOutboundGatewayRequestChannel,simpleJmsOutboundGateway,simpleJmsOutboundGatewayReplyChannel, jms_timestamp=1403649141326, jms_redelivered=false, priority=4, jms_correlationId=ID:DanteRicalde-PC-55913-1403648846388-1:61:1:1:1, className=error, jms_messageId=ID:DanteRicalde-PC-55913-1403648846388-1:2:1:53:1, id=6c4ae7b7-4ca9-15f6-b903-96647bc358d2, timestamp=1403649141384}]
		 DEBUG [org.springframework.integration.channel.DirectChannel]  - postSend (sent=true) on channel 'simpleJmsOutboundGatewayRequestChannel', message: [Payload Item content=Item [id=d9b58c02-9d4c-465d-9937-f09e15d28a48, code=Dantito Ricalde Rivera, description=Dantito Ricalde Rivera, status=1, created_date=null, message=null]][Headers={history=simpleJmsOutboundGatewayInboundChannelAdapter,simpleJmsOutboundGatewayRequestChannel, className=item, id=e816f2d8-db21-63fa-3884-0c1056c115eb, timestamp=1403649141283}]
		 
		 
		 
		 
		 DEBUG [org.springframework.integration.endpoint.SourcePollingChannelAdapter]  - Poll resulted in Message: [Payload Item content=Item [id=c2488caa-b7a1-411b-a8c1-522b5a985a90, code=Dantito Ricalde Rivera, description=Dantito Ricalde Rivera, status=1, created_date=null, message=null]][Headers={className=item, id=455cf885-94a2-e3f4-7645-c058147f5810, timestamp=1403649146284}]
		 DEBUG [org.springframework.integration.channel.DirectChannel]  - preSend on channel 'simpleJmsOutboundGatewayRequestChannel', message: [Payload Item content=Item [id=c2488caa-b7a1-411b-a8c1-522b5a985a90, code=Dantito Ricalde Rivera, description=Dantito Ricalde Rivera, status=1, created_date=null, message=null]][Headers={history=simpleJmsOutboundGatewayInboundChannelAdapter,simpleJmsOutboundGatewayRequestChannel, className=item, id=72f68941-552b-7e4a-cf9b-cdb0ca280499, timestamp=1403649146284}]
		 DEBUG [org.springframework.integration.jms.JmsOutboundGateway]  - org.springframework.integration.jms.JmsOutboundGateway#0 received message: [Payload Item content=Item [id=c2488caa-b7a1-411b-a8c1-522b5a985a90, code=Dantito Ricalde Rivera, description=Dantito Ricalde Rivera, status=1, created_date=null, message=null]][Headers={history=simpleJmsOutboundGatewayInboundChannelAdapter,simpleJmsOutboundGatewayRequestChannel, className=item, id=72f68941-552b-7e4a-cf9b-cdb0ca280499, timestamp=1403649146284}]
		 DEBUG [org.apache.activemq.transport.WireFormatNegotiator]  - Sending: WireFormatInfo { version=10, properties={MaxFrameSize=9223372036854775807, CacheSize=1024, CacheEnabled=true, Host=localhost, SizePrefixDisabled=false, MaxInactivityDurationInitalDelay=10000, TcpNoDelayEnabled=true, MaxInactivityDuration=30000, TightEncodingEnabled=true, StackTraceEnabled=true}, magic=[A,c,t,i,v,e,M,Q]}
		 DEBUG [org.apache.activemq.transport.InactivityMonitor]  - Using min of local: WireFormatInfo { version=10, properties={MaxFrameSize=9223372036854775807, CacheSize=1024, CacheEnabled=true, Host=localhost, SizePrefixDisabled=false, MaxInactivityDurationInitalDelay=10000, TcpNoDelayEnabled=true, MaxInactivityDuration=30000, TightEncodingEnabled=true, StackTraceEnabled=true}, magic=[A,c,t,i,v,e,M,Q]} and remote: WireFormatInfo { version=10, properties={CacheSize=1024, MaxFrameSize=104857600, CacheEnabled=true, SizePrefixDisabled=false, TcpNoDelayEnabled=true, MaxInactivityDurationInitalDelay=10000, MaxInactivityDuration=30000, TightEncodingEnabled=true, StackTraceEnabled=true}, magic=[A,c,t,i,v,e,M,Q]}
		 DEBUG [org.apache.activemq.transport.WireFormatNegotiator]  - Received WireFormat: WireFormatInfo { version=10, properties={CacheSize=1024, MaxFrameSize=104857600, CacheEnabled=true, SizePrefixDisabled=false, TcpNoDelayEnabled=true, MaxInactivityDurationInitalDelay=10000, MaxInactivityDuration=30000, TightEncodingEnabled=true, StackTraceEnabled=true}, magic=[A,c,t,i,v,e,M,Q]}
		 DEBUG [org.apache.activemq.transport.WireFormatNegotiator]  - tcp://localhost/127.0.0.1:61616@56378 before negotiation: OpenWireFormat{version=10, cacheEnabled=false, stackTraceEnabled=false, tightEncodingEnabled=false, sizePrefixDisabled=false, maxFrameSize=9223372036854775807}
		 DEBUG [org.apache.activemq.transport.WireFormatNegotiator]  - tcp://localhost/127.0.0.1:61616@56378 after negotiation: OpenWireFormat{version=10, cacheEnabled=true, stackTraceEnabled=true, tightEncodingEnabled=true, sizePrefixDisabled=false, maxFrameSize=104857600}
		 DEBUG [org.springframework.jms.listener.DefaultMessageListenerContainer]  - Received message of type [class org.apache.activemq.command.ActiveMQBytesMessage] from consumer [ActiveMQMessageConsumer { value=ID:DanteRicalde-PC-55913-1403648846388-1:2:1:1, started=true }] of session [ActiveMQSession {id=ID:DanteRicalde-PC-55913-1403648846388-1:2:1,started=true}]
		 DEBUG [org.springframework.integration.jms.ChannelPublishingJmsMessageListener]  - converted JMS Message [ActiveMQBytesMessage {commandId = 5, responseRequired = true, messageId = ID:DanteRicalde-PC-55913-1403648846388-1:62:1:1:1, originalDestination = null, originalTransactionId = null, producerId = ID:DanteRicalde-PC-55913-1403648846388-1:62:1:1, destination = queue://mmm, transactionId = null, expiration = 1403649146309, timestamp = 1403649146306, arrival = 0, brokerInTime = 1403649146306, brokerOutTime = 1403649146307, correlationId = null, replyTo = queue://mmmReply, persistent = true, type = null, priority = 4, groupID = null, groupSequence = 0, targetConsumerId = null, compressed = false, userID = null, content = org.apache.activemq.util.ByteSequence@6ec1d9d1, marshalledProperties = org.apache.activemq.util.ByteSequence@78c36125, dataStructure = null, redeliveryCounter = 0, size = 0, properties = {timestamp=1403649146285, className=item}, readOnlyProperties = true, readOnlyBody = true, droppable = false, jmsXGroupFirstForConsumer = false} ActiveMQBytesMessage{ bytesOut = null, dataOut = null, dataIn = java.io.DataInputStream@631f0213 }] to integration Message payload [Item [id=c2488caa-b7a1-411b-a8c1-522b5a985a90, code=Dantito Ricalde Rivera, description=Dantito Ricalde Rivera, status=1, created_date=null, message=null]]
		 DEBUG [org.springframework.integration.channel.DirectChannel]  - preSend on channel 'simpleJmsInboundGatewayRequestChannel', message: [Payload Item content=Item [id=c2488caa-b7a1-411b-a8c1-522b5a985a90, code=Dantito Ricalde Rivera, description=Dantito Ricalde Rivera, status=1, created_date=null, message=null]][Headers={history=simpleJmsInboundGateway,simpleJmsInboundGatewayRequestChannel, errorChannel=org.springframework.messaging.core.GenericMessagingTemplate$TemporaryReplyChannel@8c1603c, jms_timestamp=1403649146306, jms_redelivered=false, replyChannel=org.springframework.messaging.core.GenericMessagingTemplate$TemporaryReplyChannel@8c1603c, priority=4, className=item, jms_replyTo=queue://mmmReply, jms_messageId=ID:DanteRicalde-PC-55913-1403648846388-1:62:1:1:1, id=a71e1015-7344-e5fd-dfb3-098fcfe20c64, timestamp=1403649146310}]
		 DEBUG [org.springframework.integration.handler.ServiceActivatingHandler]  - ServiceActivator for [org.springframework.integration.handler.ExpressionEvaluatingMessageProcessor@4c222d19] received message: [Payload Item content=Item [id=c2488caa-b7a1-411b-a8c1-522b5a985a90, code=Dantito Ricalde Rivera, description=Dantito Ricalde Rivera, status=1, created_date=null, message=null]][Headers={history=simpleJmsInboundGateway,simpleJmsInboundGatewayRequestChannel, errorChannel=org.springframework.messaging.core.GenericMessagingTemplate$TemporaryReplyChannel@8c1603c, jms_timestamp=1403649146306, jms_redelivered=false, replyChannel=org.springframework.messaging.core.GenericMessagingTemplate$TemporaryReplyChannel@8c1603c, priority=4, className=item, jms_replyTo=queue://mmmReply, jms_messageId=ID:DanteRicalde-PC-55913-1403648846388-1:62:1:1:1, id=a71e1015-7344-e5fd-dfb3-098fcfe20c64, timestamp=1403649146310}]
		 DEBUG [org.springframework.integration.handler.ServiceActivatingHandler]  - handler 'ServiceActivator for [org.springframework.integration.handler.ExpressionEvaluatingMessageProcessor@4c222d19]' sending reply Message: [Payload String content=Received message for Service Activator. Message: Item [id=c2488caa-b7a1-411b-a8c1-522b5a985a90, code=Dantito Ricalde Rivera, description=Dantito Ricalde Rivera, status=1, created_date=null, message=null]][Headers={errorChannel=org.springframework.messaging.core.GenericMessagingTemplate$TemporaryReplyChannel@8c1603c, history=simpleJmsInboundGateway,simpleJmsInboundGatewayRequestChannel,simpleJmsInboundGatewayRequestChannelServiceAdapter, jms_timestamp=1403649146306, jms_redelivered=false, replyChannel=org.springframework.messaging.core.GenericMessagingTemplate$TemporaryReplyChannel@8c1603c, priority=4, className=string, jms_replyTo=queue://mmmReply, jms_messageId=ID:DanteRicalde-PC-55913-1403648846388-1:62:1:1:1, id=c357507d-bcf6-730a-47a8-b3ed41b60b34, timestamp=1403649146311}]
		 DEBUG [org.springframework.integration.channel.DirectChannel]  - postSend (sent=true) on channel 'simpleJmsInboundGatewayRequestChannel', message: [Payload Item content=Item [id=c2488caa-b7a1-411b-a8c1-522b5a985a90, code=Dantito Ricalde Rivera, description=Dantito Ricalde Rivera, status=1, created_date=null, message=null]][Headers={history=simpleJmsInboundGateway,simpleJmsInboundGatewayRequestChannel, errorChannel=org.springframework.messaging.core.GenericMessagingTemplate$TemporaryReplyChannel@8c1603c, jms_timestamp=1403649146306, jms_redelivered=false, replyChannel=org.springframework.messaging.core.GenericMessagingTemplate$TemporaryReplyChannel@8c1603c, priority=4, className=item, jms_replyTo=queue://mmmReply, jms_messageId=ID:DanteRicalde-PC-55913-1403648846388-1:62:1:1:1, id=a71e1015-7344-e5fd-dfb3-098fcfe20c64, timestamp=1403649146310}]
		 DEBUG [org.apache.activemq.thread.TaskRunnerFactory]  - Initialized TaskRunnerFactory[ActiveMQ Session Task] using ExecutorService: java.util.concurrent.ThreadPoolExecutor@4f9507a1[Running, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0]
		 DEBUG [org.apache.activemq.ActiveMQMessageConsumer]  - remove: ID:DanteRicalde-PC-55913-1403648846388-1:62:1:1, lastDeliveredSequenceId:4677
		 DEBUG [org.apache.activemq.util.ThreadPoolUtils]  - Shutdown of ExecutorService: java.util.concurrent.ThreadPoolExecutor@4f9507a1[Shutting down, pool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1] is shutdown: true and terminated: false took: 0.000 seconds.
		 DEBUG [org.apache.activemq.util.ThreadPoolUtils]  - Shutdown of ExecutorService: java.util.concurrent.ThreadPoolExecutor@3fdd2ed5[Terminated, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0] is shutdown: true and terminated: true took: 0.000 seconds.
		 DEBUG [org.apache.activemq.transport.tcp.TcpTransport]  - Stopping transport tcp://localhost/127.0.0.1:61616@56378
		 DEBUG [org.apache.activemq.thread.TaskRunnerFactory]  - Initialized TaskRunnerFactory[ActiveMQ Task] using ExecutorService: java.util.concurrent.ThreadPoolExecutor@522dc2b4[Running, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0]
		 DEBUG [org.apache.activemq.transport.tcp.TcpTransport]  - Closed socket Socket[addr=localhost/127.0.0.1,port=61616,localport=56378]
		 DEBUG [org.apache.activemq.util.ThreadPoolUtils]  - Forcing shutdown of ExecutorService: java.util.concurrent.ThreadPoolExecutor@522dc2b4[Running, pool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1]
		 DEBUG [org.springframework.integration.jms.JmsOutboundGateway]  - converted JMS Message [ActiveMQBytesMessage {commandId = 224, responseRequired = true, messageId = ID:DanteRicalde-PC-55913-1403648846388-1:2:1:54:1, originalDestination = null, originalTransactionId = null, producerId = ID:DanteRicalde-PC-55913-1403648846388-1:2:1:54, destination = queue://mmmReply, transactionId = null, expiration = 0, timestamp = 1403649146337, arrival = 0, brokerInTime = 1403649146338, brokerOutTime = 1403649146338, correlationId = ID:DanteRicalde-PC-55913-1403648846388-1:62:1:1:1, replyTo = queue://mmmReply, persistent = true, type = null, priority = 4, groupID = null, groupSequence = 0, targetConsumerId = null, compressed = false, userID = null, content = org.apache.activemq.util.ByteSequence@41fdd67f, marshalledProperties = org.apache.activemq.util.ByteSequence@d4db2, dataStructure = null, redeliveryCounter = 0, size = 0, properties = {timestamp=1403649146312, className=string, priority=4}, readOnlyProperties = true, readOnlyBody = true, droppable = false, jmsXGroupFirstForConsumer = false} ActiveMQBytesMessage{ bytesOut = null, dataOut = null, dataIn = java.io.DataInputStream@6967e124 }] to integration Message payload [Received message for Service Activator. Message: Item [id=c2488caa-b7a1-411b-a8c1-522b5a985a90, code=Dantito Ricalde Rivera, description=Dantito Ricalde Rivera, status=1, created_date=null, message=null]]
		 DEBUG [org.springframework.integration.jms.JmsOutboundGateway]  - handler 'org.springframework.integration.jms.JmsOutboundGateway#0' sending reply Message: [Payload String content=Received message for Service Activator. Message: Item [id=c2488caa-b7a1-411b-a8c1-522b5a985a90, code=Dantito Ricalde Rivera, description=Dantito Ricalde Rivera, status=1, created_date=null, message=null]][Headers={history=simpleJmsOutboundGatewayInboundChannelAdapter,simpleJmsOutboundGatewayRequestChannel,simpleJmsOutboundGateway, jms_timestamp=1403649146337, jms_redelivered=false, priority=4, jms_correlationId=ID:DanteRicalde-PC-55913-1403648846388-1:62:1:1:1, className=string, jms_replyTo=queue://mmmReply, jms_messageId=ID:DanteRicalde-PC-55913-1403648846388-1:2:1:54:1, id=876a011a-bd21-b066-ade1-db22451d1c22, timestamp=1403649146373}]
		 DEBUG [org.springframework.integration.channel.DirectChannel]  - preSend on channel 'simpleJmsOutboundGatewayReplyChannel', message: [Payload String content=Received message for Service Activator. Message: Item [id=c2488caa-b7a1-411b-a8c1-522b5a985a90, code=Dantito Ricalde Rivera, description=Dantito Ricalde Rivera, status=1, created_date=null, message=null]][Headers={history=simpleJmsOutboundGatewayInboundChannelAdapter,simpleJmsOutboundGatewayRequestChannel,simpleJmsOutboundGateway,simpleJmsOutboundGatewayReplyChannel, jms_timestamp=1403649146337, jms_redelivered=false, priority=4, jms_correlationId=ID:DanteRicalde-PC-55913-1403648846388-1:62:1:1:1, className=string, jms_replyTo=queue://mmmReply, jms_messageId=ID:DanteRicalde-PC-55913-1403648846388-1:2:1:54:1, id=f413ad74-90ce-fb1f-1b2a-d3458d5c40e1, timestamp=1403649146374}]
		 DEBUG [org.springframework.integration.handler.MethodInvokingMessageHandler]  - org.springframework.integration.handler.MethodInvokingMessageHandler#28 received message: [Payload String content=Received message for Service Activator. Message: Item [id=c2488caa-b7a1-411b-a8c1-522b5a985a90, code=Dantito Ricalde Rivera, description=Dantito Ricalde Rivera, status=1, created_date=null, message=null]][Headers={history=simpleJmsOutboundGatewayInboundChannelAdapter,simpleJmsOutboundGatewayRequestChannel,simpleJmsOutboundGateway,simpleJmsOutboundGatewayReplyChannel, jms_timestamp=1403649146337, jms_redelivered=false, priority=4, jms_correlationId=ID:DanteRicalde-PC-55913-1403648846388-1:62:1:1:1, className=string, jms_replyTo=queue://mmmReply, jms_messageId=ID:DanteRicalde-PC-55913-1403648846388-1:2:1:54:1, id=f413ad74-90ce-fb1f-1b2a-d3458d5c40e1, timestamp=1403649146374}]
		 INFO  [spring.integration.test.adapter.receiver.ChannelAdapterReceiver]  - Channel Adapter Receiver: Message Received: [Payload String content=Received message for Service Activator. Message: Item [id=c2488caa-b7a1-411b-a8c1-522b5a985a90, code=Dantito Ricalde Rivera, description=Dantito Ricalde Rivera, status=1, created_date=null, message=null]][Headers={history=simpleJmsOutboundGatewayInboundChannelAdapter,simpleJmsOutboundGatewayRequestChannel,simpleJmsOutboundGateway,simpleJmsOutboundGatewayReplyChannel,simpleJmsOutboundGatewayOutboundChannelAdapter, jms_timestamp=1403649146337, jms_redelivered=false, priority=4, jms_correlationId=ID:DanteRicalde-PC-55913-1403648846388-1:62:1:1:1, className=string, jms_replyTo=queue://mmmReply, jms_messageId=ID:DanteRicalde-PC-55913-1403648846388-1:2:1:54:1, id=bcef3312-1403-4604-b727-f3b229432f2b, timestamp=1403649146374}]*********END OF THE MESSAGE *************************
		 DEBUG [org.springframework.integration.channel.DirectChannel]  - postSend (sent=true) on channel 'simpleJmsOutboundGatewayReplyChannel', message: [Payload String content=Received message for Service Activator. Message: Item [id=c2488caa-b7a1-411b-a8c1-522b5a985a90, code=Dantito Ricalde Rivera, description=Dantito Ricalde Rivera, status=1, created_date=null, message=null]][Headers={history=simpleJmsOutboundGatewayInboundChannelAdapter,simpleJmsOutboundGatewayRequestChannel,simpleJmsOutboundGateway,simpleJmsOutboundGatewayReplyChannel, jms_timestamp=1403649146337, jms_redelivered=false, priority=4, jms_correlationId=ID:DanteRicalde-PC-55913-1403648846388-1:62:1:1:1, className=string, jms_replyTo=queue://mmmReply, jms_messageId=ID:DanteRicalde-PC-55913-1403648846388-1:2:1:54:1, id=f413ad74-90ce-fb1f-1b2a-d3458d5c40e1, timestamp=1403649146374}]
		 DEBUG [org.springframework.integration.channel.DirectChannel]  - postSend (sent=true) on channel 'simpleJmsOutboundGatewayRequestChannel', message: [Payload Item content=Item [id=c2488caa-b7a1-411b-a8c1-522b5a985a90, code=Dantito Ricalde Rivera, description=Dantito Ricalde Rivera, status=1, created_date=null, message=null]][Headers={history=simpleJmsOutboundGatewayInboundChannelAdapter,simpleJmsOutboundGatewayRequestChannel, className=item, id=72f68941-552b-7e4a-cf9b-cdb0ca280499, timestamp=1403649146284}]
		 DEBUG [org.apache.activemq.transport.AbstractInactivityMonitor]  - WriteChecker: 10000ms elapsed since last write check.
		 
		 
		 
		 
		 
		 DEBUG [org.springframework.integration.endpoint.SourcePollingChannelAdapter]  - Poll resulted in Message: [Payload Item content=Item [id=f451db53-c2d5-4871-9540-cd867f87b310, code=Danielito Ricalde Rivera, description=Danielito Ricalde Rivera, status=2, created_date=null, message=null]][Headers={className=item, id=532753ac-a6ff-090a-e4d6-8fc49951636b, timestamp=1403649151282}]
		 DEBUG [org.springframework.integration.channel.DirectChannel]  - preSend on channel 'simpleJmsOutboundGatewayRequestChannel', message: [Payload Item content=Item [id=f451db53-c2d5-4871-9540-cd867f87b310, code=Danielito Ricalde Rivera, description=Danielito Ricalde Rivera, status=2, created_date=null, message=null]][Headers={history=simpleJmsOutboundGatewayInboundChannelAdapter,simpleJmsOutboundGatewayRequestChannel, className=item, id=495f6d20-2659-09f8-ec54-57be5f63a829, timestamp=1403649151283}]
		 DEBUG [org.springframework.integration.jms.JmsOutboundGateway]  - org.springframework.integration.jms.JmsOutboundGateway#0 received message: [Payload Item content=Item [id=f451db53-c2d5-4871-9540-cd867f87b310, code=Danielito Ricalde Rivera, description=Danielito Ricalde Rivera, status=2, created_date=null, message=null]][Headers={history=simpleJmsOutboundGatewayInboundChannelAdapter,simpleJmsOutboundGatewayRequestChannel, className=item, id=495f6d20-2659-09f8-ec54-57be5f63a829, timestamp=1403649151283}]
		 DEBUG [org.apache.activemq.transport.WireFormatNegotiator]  - Sending: WireFormatInfo { version=10, properties={MaxFrameSize=9223372036854775807, CacheSize=1024, CacheEnabled=true, Host=localhost, SizePrefixDisabled=false, MaxInactivityDurationInitalDelay=10000, TcpNoDelayEnabled=true, MaxInactivityDuration=30000, TightEncodingEnabled=true, StackTraceEnabled=true}, magic=[A,c,t,i,v,e,M,Q]}
		 DEBUG [org.apache.activemq.transport.InactivityMonitor]  - Using min of local: WireFormatInfo { version=10, properties={MaxFrameSize=9223372036854775807, CacheSize=1024, CacheEnabled=true, Host=localhost, SizePrefixDisabled=false, MaxInactivityDurationInitalDelay=10000, TcpNoDelayEnabled=true, MaxInactivityDuration=30000, TightEncodingEnabled=true, StackTraceEnabled=true}, magic=[A,c,t,i,v,e,M,Q]} and remote: WireFormatInfo { version=10, properties={CacheSize=1024, MaxFrameSize=104857600, CacheEnabled=true, SizePrefixDisabled=false, TcpNoDelayEnabled=true, MaxInactivityDurationInitalDelay=10000, MaxInactivityDuration=30000, TightEncodingEnabled=true, StackTraceEnabled=true}, magic=[A,c,t,i,v,e,M,Q]}
		 DEBUG [org.apache.activemq.transport.WireFormatNegotiator]  - Received WireFormat: WireFormatInfo { version=10, properties={CacheSize=1024, MaxFrameSize=104857600, CacheEnabled=true, SizePrefixDisabled=false, TcpNoDelayEnabled=true, MaxInactivityDurationInitalDelay=10000, MaxInactivityDuration=30000, TightEncodingEnabled=true, StackTraceEnabled=true}, magic=[A,c,t,i,v,e,M,Q]}
		 DEBUG [org.apache.activemq.transport.WireFormatNegotiator]  - tcp://localhost/127.0.0.1:61616@56380 before negotiation: OpenWireFormat{version=10, cacheEnabled=false, stackTraceEnabled=false, tightEncodingEnabled=false, sizePrefixDisabled=false, maxFrameSize=9223372036854775807}
		 DEBUG [org.apache.activemq.transport.WireFormatNegotiator]  - tcp://localhost/127.0.0.1:61616@56380 after negotiation: OpenWireFormat{version=10, cacheEnabled=true, stackTraceEnabled=true, tightEncodingEnabled=true, sizePrefixDisabled=false, maxFrameSize=104857600}
		 DEBUG [org.springframework.jms.listener.DefaultMessageListenerContainer]  - Received message of type [class org.apache.activemq.command.ActiveMQBytesMessage] from consumer [ActiveMQMessageConsumer { value=ID:DanteRicalde-PC-55913-1403648846388-1:2:1:1, started=true }] of session [ActiveMQSession {id=ID:DanteRicalde-PC-55913-1403648846388-1:2:1,started=true}]
		 DEBUG [org.springframework.integration.jms.ChannelPublishingJmsMessageListener]  - converted JMS Message [ActiveMQBytesMessage {commandId = 5, responseRequired = true, messageId = ID:DanteRicalde-PC-55913-1403648846388-1:63:1:1:1, originalDestination = null, originalTransactionId = null, producerId = ID:DanteRicalde-PC-55913-1403648846388-1:63:1:1, destination = queue://mmm, transactionId = null, expiration = 1403649151305, timestamp = 1403649151302, arrival = 0, brokerInTime = 1403649151303, brokerOutTime = 1403649151304, correlationId = null, replyTo = queue://mmmReply, persistent = true, type = null, priority = 4, groupID = null, groupSequence = 0, targetConsumerId = null, compressed = false, userID = null, content = org.apache.activemq.util.ByteSequence@5131609d, marshalledProperties = org.apache.activemq.util.ByteSequence@be0d10, dataStructure = null, redeliveryCounter = 0, size = 0, properties = {timestamp=1403649151285, className=item}, readOnlyProperties = true, readOnlyBody = true, droppable = false, jmsXGroupFirstForConsumer = false} ActiveMQBytesMessage{ bytesOut = null, dataOut = null, dataIn = java.io.DataInputStream@3d4b95d1 }] to integration Message payload [Item [id=f451db53-c2d5-4871-9540-cd867f87b310, code=Danielito Ricalde Rivera, description=Danielito Ricalde Rivera, status=2, created_date=null, message=null]]
		 DEBUG [org.springframework.integration.channel.DirectChannel]  - preSend on channel 'simpleJmsInboundGatewayRequestChannel', message: [Payload Item content=Item [id=f451db53-c2d5-4871-9540-cd867f87b310, code=Danielito Ricalde Rivera, description=Danielito Ricalde Rivera, status=2, created_date=null, message=null]][Headers={history=simpleJmsInboundGateway,simpleJmsInboundGatewayRequestChannel, errorChannel=org.springframework.messaging.core.GenericMessagingTemplate$TemporaryReplyChannel@2d58ebc7, jms_timestamp=1403649151302, jms_redelivered=false, replyChannel=org.springframework.messaging.core.GenericMessagingTemplate$TemporaryReplyChannel@2d58ebc7, priority=4, className=item, jms_replyTo=queue://mmmReply, jms_messageId=ID:DanteRicalde-PC-55913-1403648846388-1:63:1:1:1, id=1e22b2aa-f726-4a0f-adc0-06f85cc3614d, timestamp=1403649151308}]
		 DEBUG [org.springframework.integration.handler.ServiceActivatingHandler]  - ServiceActivator for [org.springframework.integration.handler.ExpressionEvaluatingMessageProcessor@4c222d19] received message: [Payload Item content=Item [id=f451db53-c2d5-4871-9540-cd867f87b310, code=Danielito Ricalde Rivera, description=Danielito Ricalde Rivera, status=2, created_date=null, message=null]][Headers={history=simpleJmsInboundGateway,simpleJmsInboundGatewayRequestChannel, errorChannel=org.springframework.messaging.core.GenericMessagingTemplate$TemporaryReplyChannel@2d58ebc7, jms_timestamp=1403649151302, jms_redelivered=false, replyChannel=org.springframework.messaging.core.GenericMessagingTemplate$TemporaryReplyChannel@2d58ebc7, priority=4, className=item, jms_replyTo=queue://mmmReply, jms_messageId=ID:DanteRicalde-PC-55913-1403648846388-1:63:1:1:1, id=1e22b2aa-f726-4a0f-adc0-06f85cc3614d, timestamp=1403649151308}]
		 DEBUG [org.springframework.integration.handler.ServiceActivatingHandler]  - handler 'ServiceActivator for [org.springframework.integration.handler.ExpressionEvaluatingMessageProcessor@4c222d19]' sending reply Message: [Payload String content=Received message for Service Activator. Message: Item [id=f451db53-c2d5-4871-9540-cd867f87b310, code=Danielito Ricalde Rivera, description=Danielito Ricalde Rivera, status=2, created_date=null, message=null]][Headers={errorChannel=org.springframework.messaging.core.GenericMessagingTemplate$TemporaryReplyChannel@2d58ebc7, history=simpleJmsInboundGateway,simpleJmsInboundGatewayRequestChannel,simpleJmsInboundGatewayRequestChannelServiceAdapter, jms_timestamp=1403649151302, jms_redelivered=false, replyChannel=org.springframework.messaging.core.GenericMessagingTemplate$TemporaryReplyChannel@2d58ebc7, priority=4, className=string, jms_replyTo=queue://mmmReply, jms_messageId=ID:DanteRicalde-PC-55913-1403648846388-1:63:1:1:1, id=e4cd1b99-6191-4e2a-44ee-e107faaff566, timestamp=1403649151312}]
		 DEBUG [org.springframework.integration.channel.DirectChannel]  - postSend (sent=true) on channel 'simpleJmsInboundGatewayRequestChannel', message: [Payload Item content=Item [id=f451db53-c2d5-4871-9540-cd867f87b310, code=Danielito Ricalde Rivera, description=Danielito Ricalde Rivera, status=2, created_date=null, message=null]][Headers={history=simpleJmsInboundGateway,simpleJmsInboundGatewayRequestChannel, errorChannel=org.springframework.messaging.core.GenericMessagingTemplate$TemporaryReplyChannel@2d58ebc7, jms_timestamp=1403649151302, jms_redelivered=false, replyChannel=org.springframework.messaging.core.GenericMessagingTemplate$TemporaryReplyChannel@2d58ebc7, priority=4, className=item, jms_replyTo=queue://mmmReply, jms_messageId=ID:DanteRicalde-PC-55913-1403648846388-1:63:1:1:1, id=1e22b2aa-f726-4a0f-adc0-06f85cc3614d, timestamp=1403649151308}]
		 DEBUG [org.apache.activemq.thread.TaskRunnerFactory]  - Initialized TaskRunnerFactory[ActiveMQ Session Task] using ExecutorService: java.util.concurrent.ThreadPoolExecutor@28df6d13[Running, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0]
		 DEBUG [org.apache.activemq.ActiveMQMessageConsumer]  - remove: ID:DanteRicalde-PC-55913-1403648846388-1:63:1:1, lastDeliveredSequenceId:4687
		 DEBUG [org.apache.activemq.util.ThreadPoolUtils]  - Shutdown of ExecutorService: java.util.concurrent.ThreadPoolExecutor@28df6d13[Terminated, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 1] is shutdown: true and terminated: true took: 0.001 seconds.
		 DEBUG [org.apache.activemq.util.ThreadPoolUtils]  - Shutdown of ExecutorService: java.util.concurrent.ThreadPoolExecutor@7842240c[Terminated, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0] is shutdown: true and terminated: true took: 0.000 seconds.
		 DEBUG [org.apache.activemq.transport.tcp.TcpTransport]  - Stopping transport tcp://localhost/127.0.0.1:61616@56380
		 DEBUG [org.apache.activemq.thread.TaskRunnerFactory]  - Initialized TaskRunnerFactory[ActiveMQ Task] using ExecutorService: java.util.concurrent.ThreadPoolExecutor@3e4ccd82[Running, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0]
		 DEBUG [org.apache.activemq.transport.tcp.TcpTransport]  - Closed socket Socket[addr=localhost/127.0.0.1,port=61616,localport=56380]
		 DEBUG [org.apache.activemq.util.ThreadPoolUtils]  - Forcing shutdown of ExecutorService: java.util.concurrent.ThreadPoolExecutor@3e4ccd82[Running, pool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1]
		 DEBUG [org.springframework.integration.jms.JmsOutboundGateway]  - converted JMS Message [ActiveMQBytesMessage {commandId = 228, responseRequired = true, messageId = ID:DanteRicalde-PC-55913-1403648846388-1:2:1:55:1, originalDestination = null, originalTransactionId = null, producerId = ID:DanteRicalde-PC-55913-1403648846388-1:2:1:55, destination = queue://mmmReply, transactionId = null, expiration = 0, timestamp = 1403649151336, arrival = 0, brokerInTime = 1403649151336, brokerOutTime = 1403649151338, correlationId = ID:DanteRicalde-PC-55913-1403648846388-1:63:1:1:1, replyTo = queue://mmmReply, persistent = true, type = null, priority = 4, groupID = null, groupSequence = 0, targetConsumerId = null, compressed = false, userID = null, content = org.apache.activemq.util.ByteSequence@29b1649a, marshalledProperties = org.apache.activemq.util.ByteSequence@3d43cfd8, dataStructure = null, redeliveryCounter = 0, size = 0, properties = {timestamp=1403649151313, className=string, priority=4}, readOnlyProperties = true, readOnlyBody = true, droppable = false, jmsXGroupFirstForConsumer = false} ActiveMQBytesMessage{ bytesOut = null, dataOut = null, dataIn = java.io.DataInputStream@2f028d54 }] to integration Message payload [Received message for Service Activator. Message: Item [id=f451db53-c2d5-4871-9540-cd867f87b310, code=Danielito Ricalde Rivera, description=Danielito Ricalde Rivera, status=2, created_date=null, message=null]]
		 DEBUG [org.springframework.integration.jms.JmsOutboundGateway]  - handler 'org.springframework.integration.jms.JmsOutboundGateway#0' sending reply Message: [Payload String content=Received message for Service Activator. Message: Item [id=f451db53-c2d5-4871-9540-cd867f87b310, code=Danielito Ricalde Rivera, description=Danielito Ricalde Rivera, status=2, created_date=null, message=null]][Headers={history=simpleJmsOutboundGatewayInboundChannelAdapter,simpleJmsOutboundGatewayRequestChannel,simpleJmsOutboundGateway, jms_timestamp=1403649151336, jms_redelivered=false, priority=4, jms_correlationId=ID:DanteRicalde-PC-55913-1403648846388-1:63:1:1:1, className=string, jms_replyTo=queue://mmmReply, jms_messageId=ID:DanteRicalde-PC-55913-1403648846388-1:2:1:55:1, id=9839b92e-619d-c850-6595-e5a13d1a1fe2, timestamp=1403649151371}]
		 DEBUG [org.springframework.integration.channel.DirectChannel]  - preSend on channel 'simpleJmsOutboundGatewayReplyChannel', message: [Payload String content=Received message for Service Activator. Message: Item [id=f451db53-c2d5-4871-9540-cd867f87b310, code=Danielito Ricalde Rivera, description=Danielito Ricalde Rivera, status=2, created_date=null, message=null]][Headers={history=simpleJmsOutboundGatewayInboundChannelAdapter,simpleJmsOutboundGatewayRequestChannel,simpleJmsOutboundGateway,simpleJmsOutboundGatewayReplyChannel, jms_timestamp=1403649151336, jms_redelivered=false, priority=4, jms_correlationId=ID:DanteRicalde-PC-55913-1403648846388-1:63:1:1:1, className=string, jms_replyTo=queue://mmmReply, jms_messageId=ID:DanteRicalde-PC-55913-1403648846388-1:2:1:55:1, id=4257a6ab-ae3b-2b83-887f-41ac0a0af24d, timestamp=1403649151371}]
		 DEBUG [org.springframework.integration.handler.MethodInvokingMessageHandler]  - org.springframework.integration.handler.MethodInvokingMessageHandler#28 received message: [Payload String content=Received message for Service Activator. Message: Item [id=f451db53-c2d5-4871-9540-cd867f87b310, code=Danielito Ricalde Rivera, description=Danielito Ricalde Rivera, status=2, created_date=null, message=null]][Headers={history=simpleJmsOutboundGatewayInboundChannelAdapter,simpleJmsOutboundGatewayRequestChannel,simpleJmsOutboundGateway,simpleJmsOutboundGatewayReplyChannel, jms_timestamp=1403649151336, jms_redelivered=false, priority=4, jms_correlationId=ID:DanteRicalde-PC-55913-1403648846388-1:63:1:1:1, className=string, jms_replyTo=queue://mmmReply, jms_messageId=ID:DanteRicalde-PC-55913-1403648846388-1:2:1:55:1, id=4257a6ab-ae3b-2b83-887f-41ac0a0af24d, timestamp=1403649151371}]
		 INFO  [spring.integration.test.adapter.receiver.ChannelAdapterReceiver]  - Channel Adapter Receiver: Message Received: [Payload String content=Received message for Service Activator. Message: Item [id=f451db53-c2d5-4871-9540-cd867f87b310, code=Danielito Ricalde Rivera, description=Danielito Ricalde Rivera, status=2, created_date=null, message=null]][Headers={history=simpleJmsOutboundGatewayInboundChannelAdapter,simpleJmsOutboundGatewayRequestChannel,simpleJmsOutboundGateway,simpleJmsOutboundGatewayReplyChannel,simpleJmsOutboundGatewayOutboundChannelAdapter, jms_timestamp=1403649151336, jms_redelivered=false, priority=4, jms_correlationId=ID:DanteRicalde-PC-55913-1403648846388-1:63:1:1:1, className=string, jms_replyTo=queue://mmmReply, jms_messageId=ID:DanteRicalde-PC-55913-1403648846388-1:2:1:55:1, id=aa58b55b-ca38-3647-a030-4302eb8a2670, timestamp=1403649151372}]*********END OF THE MESSAGE *************************
		 DEBUG [org.springframework.integration.channel.DirectChannel]  - postSend (sent=true) on channel 'simpleJmsOutboundGatewayReplyChannel', message: [Payload String content=Received message for Service Activator. Message: Item [id=f451db53-c2d5-4871-9540-cd867f87b310, code=Danielito Ricalde Rivera, description=Danielito Ricalde Rivera, status=2, created_date=null, message=null]][Headers={history=simpleJmsOutboundGatewayInboundChannelAdapter,simpleJmsOutboundGatewayRequestChannel,simpleJmsOutboundGateway,simpleJmsOutboundGatewayReplyChannel, jms_timestamp=1403649151336, jms_redelivered=false, priority=4, jms_correlationId=ID:DanteRicalde-PC-55913-1403648846388-1:63:1:1:1, className=string, jms_replyTo=queue://mmmReply, jms_messageId=ID:DanteRicalde-PC-55913-1403648846388-1:2:1:55:1, id=4257a6ab-ae3b-2b83-887f-41ac0a0af24d, timestamp=1403649151371}]
		 DEBUG [org.springframework.integration.channel.DirectChannel]  - postSend (sent=true) on channel 'simpleJmsOutboundGatewayRequestChannel', message: [Payload Item content=Item [id=f451db53-c2d5-4871-9540-cd867f87b310, code=Danielito Ricalde Rivera, description=Danielito Ricalde Rivera, status=2, created_date=null, message=null]][Headers={history=simpleJmsOutboundGatewayInboundChannelAdapter,simpleJmsOutboundGatewayRequestChannel, className=item, id=495f6d20-2659-09f8-ec54-57be5f63a829, timestamp=1403649151283}]
		 
		 
		 
		 
		 
		 DEBUG [org.springframework.integration.endpoint.SourcePollingChannelAdapter]  - Poll resulted in Message: [Payload Item content=Item [id=715aeb77-179d-4cd3-b5f0-2771563ddfa9, code=Dantito Ricalde Rivera, description=Dantito Ricalde Rivera, status=1, created_date=null, message=null]][Headers={className=item, id=314c9f00-39cf-ec1f-7dde-08d42c45aa69, timestamp=1403649156285}]
		 DEBUG [org.springframework.integration.channel.DirectChannel]  - preSend on channel 'simpleJmsOutboundGatewayRequestChannel', message: [Payload Item content=Item [id=715aeb77-179d-4cd3-b5f0-2771563ddfa9, code=Dantito Ricalde Rivera, description=Dantito Ricalde Rivera, status=1, created_date=null, message=null]][Headers={history=simpleJmsOutboundGatewayInboundChannelAdapter,simpleJmsOutboundGatewayRequestChannel, className=item, id=50b2680f-5196-1f83-3170-b691bc8b523e, timestamp=1403649156285}]
		 DEBUG [org.springframework.integration.jms.JmsOutboundGateway]  - org.springframework.integration.jms.JmsOutboundGateway#0 received message: [Payload Item content=Item [id=715aeb77-179d-4cd3-b5f0-2771563ddfa9, code=Dantito Ricalde Rivera, description=Dantito Ricalde Rivera, status=1, created_date=null, message=null]][Headers={history=simpleJmsOutboundGatewayInboundChannelAdapter,simpleJmsOutboundGatewayRequestChannel, className=item, id=50b2680f-5196-1f83-3170-b691bc8b523e, timestamp=1403649156285}]
		 DEBUG [org.apache.activemq.transport.WireFormatNegotiator]  - Sending: WireFormatInfo { version=10, properties={MaxFrameSize=9223372036854775807, CacheSize=1024, CacheEnabled=true, Host=localhost, SizePrefixDisabled=false, MaxInactivityDurationInitalDelay=10000, TcpNoDelayEnabled=true, MaxInactivityDuration=30000, TightEncodingEnabled=true, StackTraceEnabled=true}, magic=[A,c,t,i,v,e,M,Q]}
		 DEBUG [org.apache.activemq.transport.InactivityMonitor]  - Using min of local: WireFormatInfo { version=10, properties={MaxFrameSize=9223372036854775807, CacheSize=1024, CacheEnabled=true, Host=localhost, SizePrefixDisabled=false, MaxInactivityDurationInitalDelay=10000, TcpNoDelayEnabled=true, MaxInactivityDuration=30000, TightEncodingEnabled=true, StackTraceEnabled=true}, magic=[A,c,t,i,v,e,M,Q]} and remote: WireFormatInfo { version=10, properties={CacheSize=1024, MaxFrameSize=104857600, CacheEnabled=true, SizePrefixDisabled=false, TcpNoDelayEnabled=true, MaxInactivityDurationInitalDelay=10000, MaxInactivityDuration=30000, TightEncodingEnabled=true, StackTraceEnabled=true}, magic=[A,c,t,i,v,e,M,Q]}
		 DEBUG [org.apache.activemq.transport.WireFormatNegotiator]  - Received WireFormat: WireFormatInfo { version=10, properties={CacheSize=1024, MaxFrameSize=104857600, CacheEnabled=true, SizePrefixDisabled=false, TcpNoDelayEnabled=true, MaxInactivityDurationInitalDelay=10000, MaxInactivityDuration=30000, TightEncodingEnabled=true, StackTraceEnabled=true}, magic=[A,c,t,i,v,e,M,Q]}
		 DEBUG [org.apache.activemq.transport.WireFormatNegotiator]  - tcp://localhost/127.0.0.1:61616@56382 before negotiation: OpenWireFormat{version=10, cacheEnabled=false, stackTraceEnabled=false, tightEncodingEnabled=false, sizePrefixDisabled=false, maxFrameSize=9223372036854775807}
		 DEBUG [org.apache.activemq.transport.WireFormatNegotiator]  - tcp://localhost/127.0.0.1:61616@56382 after negotiation: OpenWireFormat{version=10, cacheEnabled=true, stackTraceEnabled=true, tightEncodingEnabled=true, sizePrefixDisabled=false, maxFrameSize=104857600}
		 DEBUG [org.apache.activemq.ActiveMQMessageConsumer]  - ID:DanteRicalde-PC-55913-1403648846388-1:2:1:1 received expired message: MessageDispatch {commandId = 0, responseRequired = false, consumerId = ID:DanteRicalde-PC-55913-1403648846388-1:2:1:1, destination = queue://mmm, message = ActiveMQBytesMessage {commandId = 5, responseRequired = true, messageId = ID:DanteRicalde-PC-55913-1403648846388-1:64:1:1:1, originalDestination = null, originalTransactionId = null, producerId = ID:DanteRicalde-PC-55913-1403648846388-1:64:1:1, destination = queue://mmm, transactionId = null, expiration = 1403649156312, timestamp = 1403649156309, arrival = 0, brokerInTime = 1403649156309, brokerOutTime = 1403649156311, correlationId = null, replyTo = queue://mmmReply, persistent = true, type = null, priority = 4, groupID = null, groupSequence = 0, targetConsumerId = null, compressed = false, userID = null, content = org.apache.activemq.util.ByteSequence@709b0502, marshalledProperties = org.apache.activemq.util.ByteSequence@5166000f, dataStructure = null, redeliveryCounter = 0, size = 0, properties = {timestamp=1403649156287, className=item}, readOnlyProperties = true, readOnlyBody = true, droppable = false, jmsXGroupFirstForConsumer = false} ActiveMQBytesMessage{ bytesOut = null, dataOut = null, dataIn = null }, redeliveryCounter = 0}
		 DEBUG [org.apache.activemq.thread.TaskRunnerFactory]  - Initialized TaskRunnerFactory[ActiveMQ Session Task] using ExecutorService: java.util.concurrent.ThreadPoolExecutor@7f8e0288[Running, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0]
		 DEBUG [org.apache.activemq.transport.AbstractInactivityMonitor]  - 30000ms elapsed since last read check.
		 DEBUG [org.apache.activemq.transport.AbstractInactivityMonitor]  - WriteChecker: 10001ms elapsed since last write check.
		 DEBUG [org.apache.activemq.ActiveMQMessageConsumer]  - remove: ID:DanteRicalde-PC-55913-1403648846388-1:64:1:1, lastDeliveredSequenceId:0
		 DEBUG [org.apache.activemq.util.ThreadPoolUtils]  - Shutdown of ExecutorService: java.util.concurrent.ThreadPoolExecutor@7f8e0288[Shutting down, pool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1] is shutdown: true and terminated: false took: 0.000 seconds.
		 DEBUG [org.apache.activemq.util.ThreadPoolUtils]  - Shutdown of ExecutorService: java.util.concurrent.ThreadPoolExecutor@27e1c4c3[Terminated, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0] is shutdown: true and terminated: true took: 0.000 seconds.
		 DEBUG [org.apache.activemq.transport.tcp.TcpTransport]  - Stopping transport tcp://localhost/127.0.0.1:61616@56382
		 DEBUG [org.apache.activemq.thread.TaskRunnerFactory]  - Initialized TaskRunnerFactory[ActiveMQ Task] using ExecutorService: java.util.concurrent.ThreadPoolExecutor@573cf2a9[Running, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0]
		 DEBUG [org.apache.activemq.transport.tcp.TcpTransport]  - Closed socket Socket[addr=localhost/127.0.0.1,port=61616,localport=56382]
		 DEBUG [org.apache.activemq.util.ThreadPoolUtils]  - Forcing shutdown of ExecutorService: java.util.concurrent.ThreadPoolExecutor@573cf2a9[Running, pool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1]
		 DEBUG [org.springframework.integration.channel.PublishSubscribeChannel]  - preSend on channel 'errorChannel', message: [Payload MessageTimeoutException content=org.springframework.integration.MessageTimeoutException: failed to receive JMS response within timeout of: 5000ms][Headers={history=errorChannel, id=cbbd56e5-a768-1fab-82a6-865373e0ed6f, timestamp=1403649161356}]
		 DEBUG [org.springframework.integration.handler.LoggingHandler]  - (inner bean)#5c4d26f9 received message: [Payload MessageTimeoutException content=org.springframework.integration.MessageTimeoutException: failed to receive JMS response within timeout of: 5000ms][Headers={history=errorChannel, id=cbbd56e5-a768-1fab-82a6-865373e0ed6f, timestamp=1403649161356}]
		 ERROR [org.springframework.integration.handler.LoggingHandler]  - org.springframework.integration.MessageTimeoutException: failed to receive JMS response within timeout of: 5000ms
			at org.springframework.integration.jms.JmsOutboundGateway.handleRequestMessage(JmsOutboundGateway.java:667)
			at org.springframework.integration.handler.AbstractReplyProducingMessageHandler.handleMessageInternal(AbstractReplyProducingMessageHandler.java:170)
			at org.springframework.integration.handler.AbstractMessageHandler.handleMessage(AbstractMessageHandler.java:78)
			at org.springframework.integration.dispatcher.AbstractDispatcher.tryOptimizedDispatch(AbstractDispatcher.java:116)
			at org.springframework.integration.dispatcher.UnicastingDispatcher.doDispatch(UnicastingDispatcher.java:101)
			at org.springframework.integration.dispatcher.UnicastingDispatcher.dispatch(UnicastingDispatcher.java:97)
			at org.springframework.integration.channel.AbstractSubscribableChannel.doSend(AbstractSubscribableChannel.java:77)
			at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:255)
			at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:223)
			at org.springframework.messaging.core.GenericMessagingTemplate.doSend(GenericMessagingTemplate.java:109)
			at org.springframework.messaging.core.GenericMessagingTemplate.doSend(GenericMessagingTemplate.java:44)
			at org.springframework.messaging.core.AbstractMessageSendingTemplate.send(AbstractMessageSendingTemplate.java:94)
			at org.springframework.integration.endpoint.SourcePollingChannelAdapter.handleMessage(SourcePollingChannelAdapter.java:110)
			at org.springframework.integration.endpoint.AbstractPollingEndpoint.doPoll(AbstractPollingEndpoint.java:205)
			at org.springframework.integration.endpoint.AbstractPollingEndpoint.access$000(AbstractPollingEndpoint.java:55)
			at org.springframework.integration.endpoint.AbstractPollingEndpoint$1.call(AbstractPollingEndpoint.java:149)
			at org.springframework.integration.endpoint.AbstractPollingEndpoint$1.call(AbstractPollingEndpoint.java:146)
			at org.springframework.integration.endpoint.AbstractPollingEndpoint$Poller$1.run(AbstractPollingEndpoint.java:284)
			at org.springframework.integration.util.ErrorHandlingTaskExecutor$1.run(ErrorHandlingTaskExecutor.java:52)
			at org.springframework.core.task.SyncTaskExecutor.execute(SyncTaskExecutor.java:50)
			at org.springframework.integration.util.ErrorHandlingTaskExecutor.execute(ErrorHandlingTaskExecutor.java:49)
			at org.springframework.integration.endpoint.AbstractPollingEndpoint$Poller.run(AbstractPollingEndpoint.java:278)
			at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
			at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:81)
			at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
			at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:334)
			at java.util.concurrent.FutureTask.run(FutureTask.java:166)
			at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:178)
			at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:292)
			at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1110)
			at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603)
			at java.lang.Thread.run(Thread.java:722)
		
		 	DEBUG [org.springframework.integration.channel.PublishSubscribeChannel]  - postSend (sent=true) on channel 'errorChannel', message: [Payload MessageTimeoutException content=org.springframework.integration.MessageTimeoutException: failed to receive JMS response within timeout of: 5000ms][Headers={history=errorChannel, id=cbbd56e5-a768-1fab-82a6-865373e0ed6f, timestamp=1403649161356}]
				 
		 -->

	<int:inbound-channel-adapter id="simpleJmsOutboundGatewayInboundChannelAdapter"
		expression="T(java.lang.Math).random() > 0.5 ? T(org.springframework.integration.support.MessageBuilder).withPayload(new spring.integration.test.var.Item(T(java.util.UUID).randomUUID().toString(), 
 		'Dantito Ricalde Rivera', 'Dantito Ricalde Rivera', 1)).setHeader('className', 'item').build():
		T(org.springframework.integration.support.MessageBuilder).withPayload(new spring.integration.test.var.Item(T(java.util.UUID).randomUUID().toString(), 'Danielito Ricalde Rivera',
		'Danielito Ricalde Rivera', 2)).setHeader('className', 'item').build()"
		channel="simpleJmsOutboundGatewayRequestChannel" auto-startup="true">
		<int:poller fixed-rate="5000" />
	</int:inbound-channel-adapter>

	<int:channel id="simpleJmsOutboundGatewayRequestChannel" />

	<int-jms:outbound-gateway id="simpleJmsOutboundGateway" request-destination="queue" request-channel="simpleJmsOutboundGatewayRequestChannel"
		reply-channel="simpleJmsOutboundGatewayReplyChannel" reply-destination="replyQueue" message-converter="mappingJackson2MessageConverter" explicit-qos-enabled="true" time-to-live="3"
		auto-startup="true">
		<int-jms:reply-listener />
	</int-jms:outbound-gateway>

	<int:channel id="simpleJmsOutboundGatewayReplyChannel" />

	<int:outbound-channel-adapter id="simpleJmsOutboundGatewayOutboundChannelAdapter" ref="channelAdapterReceiver" method="receiveMessage"
		channel="simpleJmsOutboundGatewayReplyChannel" auto-startup="true" />

	<!-- jms inbound gateway to generate replies -->

	<int-jms:inbound-gateway id="simpleJmsInboundGateway" request-destination="queue" default-reply-destination="replyQueue" request-channel="simpleJmsInboundGatewayRequestChannel"
		error-channel="simpleJmsInboundGatewayErrorChannel" message-converter="mappingJackson2MessageConverter" auto-startup="true" />

	<int:channel id="simpleJmsInboundGatewayRequestChannel" />

	<int:service-activator id="simpleJmsInboundGatewayRequestChannelServiceAdapter" input-channel="simpleJmsInboundGatewayRequestChannel"
		expression="T(java.lang.Math).random() > 0.5 ? T(org.springframework.messaging.support.MessageBuilder).withPayload(T(java.lang.String).valueOf('Received message for Service Activator. Message: ' + #this.payload)).copyHeaders(#this.headers).setHeader('className', 'string').build() : T(java.lang.Integer).valueOf('Dantito')"
		auto-startup="true" />

	<int:channel id="simpleJmsInboundGatewayErrorChannel" />

	<int:transformer id="simpleJmsInboundGatewayErrorChannelTransformer" input-channel="simpleJmsInboundGatewayErrorChannel"
		expression="T(org.springframework.messaging.support.MessageBuilder).withPayload(new spring.integration.test.var.Error(payload.class, payload.message)).copyHeaders(#this.headers).setHeader('className', 'error').build()"
		auto-startup="true" />

	<bean id="mappingJackson2MessageConverter" class="org.springframework.jms.support.converter.MappingJackson2MessageConverter">
		<property name="typeIdPropertyName" value="className" />
		<property name="typeIdMappings">
			<map>
				<entry key="item" value="spring.integration.test.var.Item" />
				<entry key="error" value="spring.integration.test.var.Error" />
				<entry key="string" value="java.lang.String" />
			</map>
		</property>
	</bean>

	<bean id="customObjectMapper" class="spring.integration.test.mapper.factory.ObjectMapperFactory" factory-method="getMapper" />

	<!-- ****************************************** JMS Configuration ************************************** -->

	<bean id="connectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
<!-- 		<property name="brokerURL" value="vm://localhost" /> -->
		<property name="brokerURL" value="tcp://localhost:61616" />
	</bean>

	<bean id="queue" class="org.apache.activemq.command.ActiveMQQueue">
		<constructor-arg value="mmm" />
	</bean>

	<bean id="replyQueue" class="org.apache.activemq.command.ActiveMQQueue">
		<constructor-arg value="mmmReply" />
	</bean>

	<bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">
		<property name="connectionFactory" ref="connectionFactory" />
		<property name="defaultDestination" ref="queue" />
		<property name="receiveTimeout" value="#{T(org.springframework.jms.core.JmsTemplate).RECEIVE_TIMEOUT_NO_WAIT}" />
	</bean>

</beans>