<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:int="http://www.springframework.org/schema/integration" xmlns:int-jdbc="http://www.springframework.org/schema/integration/jdbc" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd
		http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.1.xsd
		http://www.springframework.org/schema/integration/jdbc http://www.springframework.org/schema/integration/jdbc/spring-integration-jdbc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">

	<!-- Direct Channel (Point to Point) (instance of SubscribableChannel) -->

	<int:channel id="numberChannel" datatype="java.lang.Number" />

	<int:channel id="numberChannelMultipleTypes" datatype="java.lang.String, java.lang.Number" />

	<!-- Queue Channel -->
	<int:channel id="queueChannel">
		<int:queue capacity="25" />
	</int:channel>

	<!-- Persistence Queue Channel -->
	<int:channel id="dbBackedChannel">
		<int:queue message-store="messageStore" />
	</int:channel>

	<!-- JdbcMessageStore configured with the namespace support provided by the Spring Integration JDBC module -->
	<int-jdbc:message-store id="messageStore" data-source="someDataSource" />

	<!-- Converters registered with the Integration Conversion Service -->
	<int:converter ref="strToInt" />

	<!-- Base de datos de HSQL en memoria -->
	<jdbc:embedded-database id="someDataSource" type="HSQL">
	    <jdbc:script location="classpath*:org/springframework/integration/jdbc/schema-drop-hsqldb.sql" />
		<jdbc:script location="classpath*:org/springframework/integration/jdbc/schema-hsqldb.sql" />
	</jdbc:embedded-database>

	<!-- Publish Subscribe Channel : simple -->
	<int:publish-subscribe-channel id="publish-subscribe-channel" />

	<!-- Publish Subscribe Channel: with task executor -->
	<int:publish-subscribe-channel id="publish-subscribe-channel-with-suscriptor" task-executor="task-executor">
		<int:interceptors>
			<int:ref bean="myChannelInterceptor" />
		</int:interceptors>
	</int:publish-subscribe-channel>

	<bean id="myPublishSubscriberChannelHandlerA" class="spring.integration.test.handler.MyPublishSubscriberChannelHanlder">
		<constructor-arg value="A" />
	</bean>
	<bean id="myPublishSubscriberChannelHandlerB" class="spring.integration.test.handler.MyPublishSubscriberChannelHanlder">
		<constructor-arg value="B" />
	</bean>

	<task:executor id="task-executor" pool-size="10" />

	<task:annotation-driven executor="task-executor" />

	<!-- Publish Subscribe Channel: with apply-secuence -->
	<int:publish-subscribe-channel id="publish-subscribe-channel-with-suscriptor-secuence" task-executor="task-executor" apply-sequence="true" />

	<bean id="myPublishSubscriberChannelHandlerC" class="spring.integration.test.handler.MyPublishSubscriberChannelHanlder">
		<constructor-arg value="C" />
	</bean>
	<bean id="myPublishSubscriberChannelHandlerD" class="spring.integration.test.handler.MyPublishSubscriberChannelHanlder">
		<constructor-arg value="D" />
	</bean>
	<bean id="myPublishSubscriberChannelHandlerE" class="spring.integration.test.handler.MyPublishSubscriberChannelHanlder">
		<constructor-arg value="E" />
	</bean>

	<!-- Executor Channel -->
	<task:executor id="task-executor-for-executor-channel" />

	<int:channel id="executorChannel">
		<int:dispatcher task-executor="task-executor-for-executor-channel" failover="false" />
	</int:channel>

	<int:service-activator input-channel="executorChannel" ref="myExecutorChannelHandler" />

	<!-- Priority Channel -->
	<int:channel id="priorityChannel" datatype="java.lang.Number, java.lang.String">
		<int:priority-queue capacity="20" />
	</int:channel>

	<!-- Priority Channel With Comparator -->
	<int:channel id="priorityChannelWithComparator" datatype="java.lang.Number, java.lang.String">
		<int:priority-queue capacity="20" comparator="myComparator" />
	</int:channel>

	<!-- Rendezvous channel -->
	<int:channel id="rendezvousChannel">
		<int:rendezvous-queue />
	</int:channel>

	<!-- Rendezvous channel with severals receivers -->
	<int:channel id="rendezvousChannelWithSeveralReceivers">
		<int:rendezvous-queue />
	</int:channel>

	<!-- Rendezvous channel with reply channel -->
	<int:channel id="rendezvousChannelWithReplyChannel">
		<int:rendezvous-queue />
	</int:channel>

	<!-- SCOPED CHANNEL -->
	<int:channel id="threadLocalChannel" scope="thread" />

	<!-- Register a thread scope in the context to be used by the thread local channel -->
	<bean class="org.springframework.beans.factory.config.CustomScopeConfigurer">
		<property name="scopes">
			<map>
				<entry key="thread" value="org.springframework.context.support.SimpleThreadScope" />
			</map>
		</property>
	</bean>

	<int:service-activator input-channel="threadLocalChannel" ref="myExecutorChannelHandler" />

	<!-- SCOPED CHANNEL WITH A QUEUE -->
	<int:channel id="threadLocalChannelWithAQueue" scope="thread">
		<int:queue />
	</int:channel>

	<!-- SCOPED CHANNEL WITH A QUEUE WITH A TERMINAL CHANNEL (REPLY CHANNEL) -->
	<int:channel id="threadLocalChannelWithAQueueAndReplyChannel" scope="thread">
		<int:queue />
	</int:channel>

	<int:channel id="terminalChannel" scope="thread">
		<int:queue />
	</int:channel>

	<!-- GLOBAL INTERCEPTORS -->
	<int:channel-interceptor pattern="input*, bar*, foo, publish-subscribe-channel-with-suscriptor, stdout*" order="3">
		<bean class="spring.integration.test.interceptor.MyGlobalChannelInterceptor">
			<property name="number" value="1" />
		</bean>
	</int:channel-interceptor>

	<int:channel-interceptor pattern="input*, bar*, foo, publish-subscribe-channel-with-suscriptor" order="2">
		<bean class="spring.integration.test.interceptor.MyGlobalChannelInterceptor">
			<property name="number" value="2" />
		</bean>
	</int:channel-interceptor>

	<!-- WIRE TAP -->
	<int:channel id="channelWithWireTap">
		<int:interceptors>
			<int:wire-tap channel="loggerWithExpression" />
			<int:wire-tap channel="fullLogger" />
		</int:interceptors>
	</int:channel>

	<int:logging-channel-adapter id="fullLogger" level="INFO" log-full-message="true" />

	<int:logging-channel-adapter id="loggerWithExpression" level="INFO" expression="{payload, headers.id}" />

	<int:service-activator input-channel="channelWithWireTap" ref="myExecutorChannelHandler" />

	<!-- GLOBAL WIRE TAP -->
	<int:wire-tap pattern="input*, bar*, foo, publish-subscribe-channel-with-suscriptor, channelWithWireTap" order="3" channel="fullLogger" />

	<!-- NULL CHANNEL -->
	<int:channel id="ChannelToTestNullChannel" />

	<int:service-activator input-channel="ChannelToTestNullChannel" ref="myExecutorChannelHandler" output-channel="nullChannel" />

	<int:channel id="replyChannelToTestNullChannel">
		<int:queue />
	</int:channel>
</beans>