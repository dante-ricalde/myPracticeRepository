<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:websocket="http://www.springframework.org/schema/websocket"
	xmlns:int="http://www.springframework.org/schema/integration" xmlns:int-ip="http://www.springframework.org/schema/integration/ip" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:task="http://www.springframework.org/schema/task" xmlns:util="http://www.springframework.org/schema/util" 
	xmlns:int-stomp="http://www.springframework.org/schema/integration/stomp"
	xmlns:int-websocket="http://www.springframework.org/schema/integration/websocket"
	xmlns:int-http="http://www.springframework.org/schema/integration/http"
	xmlns:int-event="http://www.springframework.org/schema/integration/event" xmlns:c="http://www.springframework.org/schema/c"
	xmlns:rabbit="http://www.springframework.org/schema/rabbit"
	xsi:schemaLocation="http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket-4.3.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.3.xsd
		http://www.springframework.org/schema/integration/stomp http://www.springframework.org/schema/integration/stomp/spring-integration-stomp-4.3.xsd
		http://www.springframework.org/schema/integration/event http://www.springframework.org/schema/integration/event/spring-integration-event-4.3.xsd
		http://www.springframework.org/schema/integration/ip http://www.springframework.org/schema/integration/ip/spring-integration-ip-4.3.xsd
		http://www.springframework.org/schema/integration/http http://www.springframework.org/schema/integration/http/spring-integration-http-4.3.xsd
		http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration-4.3.xsd
		http://www.springframework.org/schema/integration/websocket http://www.springframework.org/schema/integration/websocket/spring-integration-websocket-4.3.xsd
		http://www.springframework.org/schema/rabbit http://www.springframework.org/schema/rabbit/spring-rabbit-1.6.xsd">
	
	
	<websocket:message-broker application-destination-prefix="/appChatRelay">
<!--    		<websocket:stomp-endpoint path="/chatRelay" allowed-origins="http://chat-1.rp3svkvi3k.us-west-2.elasticbeanstalk.com,https://chat-1.rp3svkvi3k.us-west-2.elasticbeanstalk.com"> -->
   		<websocket:stomp-endpoint path="/chatRelay">
<!-- 		<websocket:stomp-endpoint path="/whatsAppRelay" allowed-origins="http://newwebsocketapitest.cfapps.io,https://newwebsocketapitest.cfapps.io"> -->
			<websocket:handshake-interceptors>
			    <bean class="org.springframework.web.socket.server.support.HttpSessionHandshakeInterceptor" />
			</websocket:handshake-interceptors>
			<websocket:sockjs heartbeat-time="20000" client-library-url="../../../js/sockjs-1.0.3.js" />
		</websocket:stomp-endpoint>
<!-- 		<websocket:stomp-broker-relay prefix="/topic/,/user/queue/messages/,/queue/,/user/,/exchange/" relay-host="squirrel.rmq.cloudamqp.com" relay-port="5672" system-login="jdukblll" system-passcode="0AVItKp3pcPgYzqpB3Po8IOwjhHRIzN5" client-login="jdukblll" client-passcode="0AVItKp3pcPgYzqpB3Po8IOwjhHRIzN5" /> -->
		<websocket:stomp-broker-relay prefix="/topic/,/user/queue/messages/,/queue/,/user/,/exchange/" relay-port="61613" />
<!-- 			<websocket:simple-broker prefix="/topic/,/user/queue/messages/,/queue/,/user/,/exchange/" /> -->
	</websocket:message-broker>
	
	<int:channel id="welcomeChannel" />
	
	<int:channel id="chatSubscribeChannel" />
	
	<int:channel id="chatSubscribeEventChannel" />
	
	<int:recipient-list-router id="chatSubscribeChannelRecipientListRouter" input-channel="chatSubscribeEventChannel"
		apply-sequence="true" auto-startup="true" default-output-channel="chatSubscribeChannel">
		<int:recipient channel="nullChannel" selector-expression="#this.payload.message.headers['simpDestination'].startsWith('/appChatRelay/chat/getMessages/')" />
	</int:recipient-list-router>
	
	<int-event:inbound-channel-adapter event-types="org.springframework.web.socket.messaging.SessionSubscribeEvent" channel="chatSubscribeEventChannel" />
	
	<!--****************************************************** RabbitMQ Configuration ************************************************************ -->
	
	<rabbit:connection-factory id="connectionFactory" host="localhost" />
	
<!-- 	<bean id="connectionFactory" class="org.springframework.amqp.rabbit.connection.CachingConnectionFactory" p:host="localhost"></bean> -->
	
	<rabbit:admin connection-factory="connectionFactory" auto-startup="true" />
	
<!-- 	<bean id="admin" class="org.springframework.amqp.rabbit.core.RabbitAdmin" c:connectionFactory-ref="connectionFactory" p:autoStartup="true" > -->
		
<!-- 	</bean> -->
	
	<rabbit:queue id="messagesKeluchisNotificationQueue" name="messagesKeluchisNotificationQueue" />
	
	<rabbit:queue id="messagesKeluchisDanteQueue" name="messagesKeluchisDanteQueue" />
	
	<rabbit:queue id="messagesKeluchisDantitoQueue" name="messagesKeluchisDantitoQueue" />
	
	<rabbit:queue id="messagesKeluchisDanielitoQueue" name="messagesKeluchisDanielitoQueue" />
	
	<rabbit:direct-exchange name="chatDirectExchange">
		<rabbit:bindings>
			<!-- Queue bindings for keluchis -->
			<rabbit:binding key="messages-keluchis-notification" queue="messagesKeluchisNotificationQueue" />
			<rabbit:binding key="messages-keluchis-dante" queue="messagesKeluchisDanteQueue" />
			<rabbit:binding key="messages-keluchis-dantito" queue="messagesKeluchisDantitoQueue" />
			<rabbit:binding key="messages-keluchis-danielito" queue="messagesKeluchisDanielitoQueue" />
		</rabbit:bindings>
	</rabbit:direct-exchange>

<!-- 	<bean id="anonymousNyseMarketDateQueue" class="org.springframework.amqp.core.Queue" c:name="anonymousNyseMarketDateQueue" p:shouldDeclare="true"> -->
<!-- 		<property name="adminsThatShouldDeclare"> -->
<!-- 			<array> -->
<!-- 				<ref bean="admin"/> -->
<!-- 			</array> -->
<!-- 		</property> -->
<!-- 	</bean> -->
	
<!-- 	<int:object-to-json-transformer input-channel="queueMessagesGatewayHttpJsonRequestChannel" output-channel="queueMessagesGatewayHttpRequestChannel" content-type="application/json" /> -->

	<int:header-enricher input-channel="queueMessagesGatewayHttpJsonRequestChannel" output-channel="queueMessagesGatewayHttpRequestChannel">
		<int:header name="Content-Type" value="application/json" />
	</int:header-enricher>
	
	<int-http:outbound-gateway id="simpleHttpOutboundGatewayHttpOutboundGateway"
		url="http://localhost:15672/api/queues/%2F/messagesKeluchisDanteQueue/get" request-channel="queueMessagesGatewayHttpRequestChannel" reply-channel="queueMessagesGatewayHttpReplyChannel"
		http-method="POST" extract-request-payload="true" expected-response-type="java.lang.String" charset="UTF-8"
		transfer-cookies="true" mapped-response-headers="HTTP_RESPONSE_HEADERS, X-myCookie" request-factory="customSimpleClientHttpRequestFactory" encode-uri="false" auto-startup="true">
		<int-http:uri-variable name="queueName" expression="payload" />
	</int-http:outbound-gateway>
	
<!-- 	<int:json-to-object-transformer input-channel="queueMessagesGatewayHttpReplyChannel" type="java.util.Map" output-channel="queueMessagesGatewayJsonReplyChannel"></int:json-to-object-transformer> -->
<!-- 	<int:transformer input-channel="queueMessagesGatewayHttpReplyChannel" output-channel="queueMessagesGatewayJsonReplyChannel" expression="@jMessageConverter.getObjectMapper().readValue(new org.json.JSONArray(payload).toList().![payload].toString(), T(com.fasterxml.jackson.databind.type.TypeFactory).defaultInstance().constructCollectionType(new java.util.ArrayList().getClass(), new test.org.spring.websocket.api.model.ChatMessage().getClass()))" /> -->
	<int:transformer input-channel="queueMessagesGatewayHttpReplyChannel" expression="@jMessageConverter.getObjectMapper().readValue(new org.json.JSONArray(payload).toList().![payload].toString(), T(com.fasterxml.jackson.databind.type.TypeFactory).defaultInstance().constructCollectionType(new java.util.ArrayList().getClass(), new test.org.spring.websocket.api.model.ChatMessage().getClass()))" />
<!-- 	<int:json-to-object-transformer input-channel="queueMessagesGatewayJsonReplyChannel" type="java.util.ArrayList"></int:json-to-object-transformer> -->
	<!-- 
	<util:list id="messageConvertersList">
		<bean id="jMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter" />
	</util:list>
	 -->
	<bean id="jMessageConverter" class="org.springframework.messaging.converter.MappingJackson2MessageConverter" />
	 
<!-- 	<int:channel id="queueMessagesGatewayChatMessageReplyChannel"></int:channel>  -->
</beans>
